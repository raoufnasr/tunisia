{"version":3,"sources":["C:/Users/ASUS/Documents/Work/argon-dashboard-pro-angular-v1.1.1/node_modules/devextreme-angular/fesm5/devextreme-angular-ui-sortable.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAssCA6iBsC,AAU/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAKqB;;;;;KAKvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gDAkBoB","file":"devextreme-angular-ui-sortable.js","sourcesContent":["import { __extends, __decorate, __metadata, __param } from 'tslib';\nimport { TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, EventEmitter, Component, NgModule } from '@angular/core';\nimport DxSortable from 'devextreme/ui/sortable';\nimport { DxTemplateHost, WatcherHelper, NestedOptionHost, DxComponent, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\nimport { DxoCursorOffsetModule } from 'devextreme-angular/ui/nested';\n\n/*!\r\n * devextreme-angular\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\n/**\r\n * Sortable is a user interface utility that allows a widget's items to be reordered via drag and drop gestures.\r\n */\r\nvar DxSortableComponent = /** @class */ (function (_super) {\r\n    __extends(DxSortableComponent, _super);\r\n    function DxSortableComponent(elementRef, ngZone, templateHost, _watcherHelper, optionHost, transferState, platformId) {\r\n        var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId) || this;\r\n        _this._createEventEmitters([\r\n            { subscribe: 'add', emit: 'onAdd' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'dragChange', emit: 'onDragChange' },\r\n            { subscribe: 'dragEnd', emit: 'onDragEnd' },\r\n            { subscribe: 'dragMove', emit: 'onDragMove' },\r\n            { subscribe: 'dragStart', emit: 'onDragStart' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'remove', emit: 'onRemove' },\r\n            { subscribe: 'reorder', emit: 'onReorder' },\r\n            { emit: 'allowDropInsideItemChange' },\r\n            { emit: 'allowReorderingChange' },\r\n            { emit: 'autoScrollChange' },\r\n            { emit: 'boundaryChange' },\r\n            { emit: 'containerChange' },\r\n            { emit: 'cursorOffsetChange' },\r\n            { emit: 'dataChange' },\r\n            { emit: 'dragDirectionChange' },\r\n            { emit: 'dragTemplateChange' },\r\n            { emit: 'dropFeedbackModeChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'filterChange' },\r\n            { emit: 'groupChange' },\r\n            { emit: 'handleChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'itemOrientationChange' },\r\n            { emit: 'moveItemOnDropChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'scrollSensitivityChange' },\r\n            { emit: 'scrollSpeedChange' },\r\n            { emit: 'widthChange' }\r\n        ]);\r\n        optionHost.setHost(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DxSortableComponent.prototype, \"allowDropInsideItem\", {\r\n        /**\r\n         * Allows a user to drop an item inside another item.\r\n         */\r\n        get: function () {\r\n            return this._getOption('allowDropInsideItem');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('allowDropInsideItem', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSortableComponent.prototype, \"allowReordering\", {\r\n        /**\r\n         * Allows a user to reorder sortable items.\r\n         */\r\n        get: function () {\r\n            return this._getOption('allowReordering');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('allowReordering', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSortableComponent.prototype, \"autoScroll\", {\r\n        /**\r\n         * Enables automatic scrolling while dragging an item beyond the viewport.\r\n         */\r\n        get: function () {\r\n            return this._getOption('autoScroll');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('autoScroll', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSortableComponent.prototype, \"boundary\", {\r\n        /**\r\n         * Specifies a DOM element that limits the dragging area.\r\n         */\r\n        get: function () {\r\n            return this._getOption('boundary');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('boundary', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSortableComponent.prototype, \"container\", {\r\n        /**\r\n         * Specifies a custom container in which the draggable item should be rendered.\r\n         */\r\n        get: function () {\r\n            return this._getOption('container');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('container', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSortableComponent.prototype, \"cursorOffset\", {\r\n        /**\r\n         * Specifies the cursor offset from the dragged item.\r\n         */\r\n        get: function () {\r\n            return this._getOption('cursorOffset');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('cursorOffset', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSortableComponent.prototype, \"data\", {\r\n        /**\r\n         * A container for custom data.\r\n         */\r\n        get: function () {\r\n            return this._getOption('data');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('data', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSortableComponent.prototype, \"dragDirection\", {\r\n        /**\r\n         * Specifies the directions in which an item can be dragged.\r\n         */\r\n        get: function () {\r\n            return this._getOption('dragDirection');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('dragDirection', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSortableComponent.prototype, \"dragTemplate\", {\r\n        /**\r\n         * Specifies custom markup to be shown instead of the item being dragged.\r\n         */\r\n        get: function () {\r\n            return this._getOption('dragTemplate');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('dragTemplate', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSortableComponent.prototype, \"dropFeedbackMode\", {\r\n        /**\r\n         * Specifies how to highlight the item's drop position.\r\n         */\r\n        get: function () {\r\n            return this._getOption('dropFeedbackMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('dropFeedbackMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSortableComponent.prototype, \"elementAttr\", {\r\n        /**\r\n         * Specifies the attributes to be attached to the widget's root element.\r\n         */\r\n        get: function () {\r\n            return this._getOption('elementAttr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('elementAttr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSortableComponent.prototype, \"filter\", {\r\n        /**\r\n         * Specifies a CSS selector for the items that can be dragged.\r\n         */\r\n        get: function () {\r\n            return this._getOption('filter');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('filter', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSortableComponent.prototype, \"group\", {\r\n        /**\r\n         * Allows you to group several widgets, so that users can drag and drop items between them.\r\n         */\r\n        get: function () {\r\n            return this._getOption('group');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('group', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSortableComponent.prototype, \"handle\", {\r\n        /**\r\n         * Specifies a CSS selector (ID or class) that should act as the drag handle(s) for the item(s).\r\n         */\r\n        get: function () {\r\n            return this._getOption('handle');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('handle', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSortableComponent.prototype, \"height\", {\r\n        /**\r\n         * Specifies the widget's height.\r\n         */\r\n        get: function () {\r\n            return this._getOption('height');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('height', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSortableComponent.prototype, \"itemOrientation\", {\r\n        /**\r\n         * Notifies the widget of the items' orientation.\r\n         */\r\n        get: function () {\r\n            return this._getOption('itemOrientation');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('itemOrientation', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSortableComponent.prototype, \"moveItemOnDrop\", {\r\n        /**\r\n         * Moves an element in the HTML markup when it is dropped.\r\n         */\r\n        get: function () {\r\n            return this._getOption('moveItemOnDrop');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('moveItemOnDrop', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSortableComponent.prototype, \"rtlEnabled\", {\r\n        /**\r\n         * Switches the widget to a right-to-left representation.\r\n         */\r\n        get: function () {\r\n            return this._getOption('rtlEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('rtlEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSortableComponent.prototype, \"scrollSensitivity\", {\r\n        /**\r\n         * Specifies the distance in pixels from the edge of viewport at which scrolling should start. Applies only if autoScroll is true.\r\n         */\r\n        get: function () {\r\n            return this._getOption('scrollSensitivity');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('scrollSensitivity', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSortableComponent.prototype, \"scrollSpeed\", {\r\n        /**\r\n         * Specifies the scrolling speed when dragging an item beyond the viewport. Applies only if autoScroll is true.\r\n         */\r\n        get: function () {\r\n            return this._getOption('scrollSpeed');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('scrollSpeed', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSortableComponent.prototype, \"width\", {\r\n        /**\r\n         * Specifies the widget's width.\r\n         */\r\n        get: function () {\r\n            return this._getOption('width');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('width', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxSortableComponent.prototype._createInstance = function (element, options) {\r\n        return new DxSortable(element, options);\r\n    };\r\n    DxSortableComponent.prototype.ngOnDestroy = function () {\r\n        this._destroyWidget();\r\n    };\r\n    DxSortableComponent.ctorParameters = function () { return [\r\n        { type: ElementRef },\r\n        { type: NgZone },\r\n        { type: DxTemplateHost },\r\n        { type: WatcherHelper },\r\n        { type: NestedOptionHost },\r\n        { type: TransferState },\r\n        { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\r\n    ]; };\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxSortableComponent.prototype, \"allowDropInsideItem\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxSortableComponent.prototype, \"allowReordering\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxSortableComponent.prototype, \"autoScroll\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxSortableComponent.prototype, \"boundary\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxSortableComponent.prototype, \"container\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxSortableComponent.prototype, \"cursorOffset\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxSortableComponent.prototype, \"data\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxSortableComponent.prototype, \"dragDirection\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxSortableComponent.prototype, \"dragTemplate\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxSortableComponent.prototype, \"dropFeedbackMode\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxSortableComponent.prototype, \"elementAttr\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxSortableComponent.prototype, \"filter\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxSortableComponent.prototype, \"group\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxSortableComponent.prototype, \"handle\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxSortableComponent.prototype, \"height\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxSortableComponent.prototype, \"itemOrientation\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxSortableComponent.prototype, \"moveItemOnDrop\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxSortableComponent.prototype, \"rtlEnabled\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Number),\r\n        __metadata(\"design:paramtypes\", [Number])\r\n    ], DxSortableComponent.prototype, \"scrollSensitivity\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Number),\r\n        __metadata(\"design:paramtypes\", [Number])\r\n    ], DxSortableComponent.prototype, \"scrollSpeed\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxSortableComponent.prototype, \"width\", null);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"onAdd\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"onDisposing\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"onDragChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"onDragEnd\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"onDragMove\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"onDragStart\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"onInitialized\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"onOptionChanged\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"onRemove\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"onReorder\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"allowDropInsideItemChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"allowReorderingChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"autoScrollChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"boundaryChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"containerChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"cursorOffsetChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"dataChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"dragDirectionChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"dragTemplateChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"dropFeedbackModeChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"elementAttrChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"filterChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"groupChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"handleChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"heightChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"itemOrientationChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"moveItemOnDropChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"rtlEnabledChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"scrollSensitivityChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"scrollSpeedChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSortableComponent.prototype, \"widthChange\", void 0);\r\n    DxSortableComponent = __decorate([\r\n        Component({\r\n            selector: 'dx-sortable',\r\n            template: '<ng-content></ng-content>',\r\n            providers: [\r\n                DxTemplateHost,\r\n                WatcherHelper,\r\n                NestedOptionHost\r\n            ]\r\n        }),\r\n        __param(6, Inject(PLATFORM_ID)),\r\n        __metadata(\"design:paramtypes\", [ElementRef, NgZone, DxTemplateHost,\r\n            WatcherHelper,\r\n            NestedOptionHost,\r\n            TransferState, Object])\r\n    ], DxSortableComponent);\r\n    return DxSortableComponent;\r\n}(DxComponent));\r\nvar DxSortableModule = /** @class */ (function () {\r\n    function DxSortableModule() {\r\n    }\r\n    DxSortableModule = __decorate([\r\n        NgModule({\r\n            imports: [\r\n                DxoCursorOffsetModule,\r\n                DxIntegrationModule,\r\n                DxTemplateModule,\r\n                BrowserTransferStateModule\r\n            ],\r\n            declarations: [\r\n                DxSortableComponent\r\n            ],\r\n            exports: [\r\n                DxSortableComponent,\r\n                DxoCursorOffsetModule,\r\n                DxTemplateModule\r\n            ]\r\n        })\r\n    ], DxSortableModule);\r\n    return DxSortableModule;\r\n}());\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DxSortableComponent, DxSortableModule };\n"]}