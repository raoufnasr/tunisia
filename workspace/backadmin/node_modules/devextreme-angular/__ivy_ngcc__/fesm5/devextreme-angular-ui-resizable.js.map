{"version":3,"sources":["C:/Users/ASUS/Documents/Work/argon-dashboard-pro-angular-v1.1.1/node_modules/devextreme-angular/fesm5/devextreme-angular-ui-resizable.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uCAqQuC,AAUhC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAKsB;;;;;KAKxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;gDAgBqB","file":"devextreme-angular-ui-resizable.js","sourcesContent":["import { __extends, __decorate, __metadata, __param } from 'tslib';\nimport { TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, EventEmitter, Component, NgModule } from '@angular/core';\nimport DxResizable from 'devextreme/ui/resizable';\nimport { DxTemplateHost, WatcherHelper, NestedOptionHost, DxComponent, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\n\n/*!\r\n * devextreme-angular\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\n/**\r\n * The Resizable widget enables its content to be resizable in the UI.\r\n */\r\nvar DxResizableComponent = /** @class */ (function (_super) {\r\n    __extends(DxResizableComponent, _super);\r\n    function DxResizableComponent(elementRef, ngZone, templateHost, _watcherHelper, optionHost, transferState, platformId) {\r\n        var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId) || this;\r\n        _this._createEventEmitters([\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'resize', emit: 'onResize' },\r\n            { subscribe: 'resizeEnd', emit: 'onResizeEnd' },\r\n            { subscribe: 'resizeStart', emit: 'onResizeStart' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'handlesChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'maxHeightChange' },\r\n            { emit: 'maxWidthChange' },\r\n            { emit: 'minHeightChange' },\r\n            { emit: 'minWidthChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'widthChange' }\r\n        ]);\r\n        optionHost.setHost(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DxResizableComponent.prototype, \"elementAttr\", {\r\n        /**\r\n         * Specifies the attributes to be attached to the widget's root element.\r\n         */\r\n        get: function () {\r\n            return this._getOption('elementAttr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('elementAttr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxResizableComponent.prototype, \"handles\", {\r\n        /**\r\n         * Specifies which borders of the widget element are used as a handle.\r\n         */\r\n        get: function () {\r\n            return this._getOption('handles');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('handles', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxResizableComponent.prototype, \"height\", {\r\n        /**\r\n         * Specifies the widget's height.\r\n         */\r\n        get: function () {\r\n            return this._getOption('height');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('height', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxResizableComponent.prototype, \"maxHeight\", {\r\n        /**\r\n         * Specifies the upper height boundary for resizing.\r\n         */\r\n        get: function () {\r\n            return this._getOption('maxHeight');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('maxHeight', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxResizableComponent.prototype, \"maxWidth\", {\r\n        /**\r\n         * Specifies the upper width boundary for resizing.\r\n         */\r\n        get: function () {\r\n            return this._getOption('maxWidth');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('maxWidth', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxResizableComponent.prototype, \"minHeight\", {\r\n        /**\r\n         * Specifies the lower height boundary for resizing.\r\n         */\r\n        get: function () {\r\n            return this._getOption('minHeight');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('minHeight', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxResizableComponent.prototype, \"minWidth\", {\r\n        /**\r\n         * Specifies the lower width boundary for resizing.\r\n         */\r\n        get: function () {\r\n            return this._getOption('minWidth');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('minWidth', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxResizableComponent.prototype, \"rtlEnabled\", {\r\n        /**\r\n         * Switches the widget to a right-to-left representation.\r\n         */\r\n        get: function () {\r\n            return this._getOption('rtlEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('rtlEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxResizableComponent.prototype, \"width\", {\r\n        /**\r\n         * Specifies the widget's width.\r\n         */\r\n        get: function () {\r\n            return this._getOption('width');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('width', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxResizableComponent.prototype._createInstance = function (element, options) {\r\n        return new DxResizable(element, options);\r\n    };\r\n    DxResizableComponent.prototype.ngOnDestroy = function () {\r\n        this._destroyWidget();\r\n    };\r\n    DxResizableComponent.ctorParameters = function () { return [\r\n        { type: ElementRef },\r\n        { type: NgZone },\r\n        { type: DxTemplateHost },\r\n        { type: WatcherHelper },\r\n        { type: NestedOptionHost },\r\n        { type: TransferState },\r\n        { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\r\n    ]; };\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxResizableComponent.prototype, \"elementAttr\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxResizableComponent.prototype, \"handles\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxResizableComponent.prototype, \"height\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Number),\r\n        __metadata(\"design:paramtypes\", [Number])\r\n    ], DxResizableComponent.prototype, \"maxHeight\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Number),\r\n        __metadata(\"design:paramtypes\", [Number])\r\n    ], DxResizableComponent.prototype, \"maxWidth\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Number),\r\n        __metadata(\"design:paramtypes\", [Number])\r\n    ], DxResizableComponent.prototype, \"minHeight\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Number),\r\n        __metadata(\"design:paramtypes\", [Number])\r\n    ], DxResizableComponent.prototype, \"minWidth\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxResizableComponent.prototype, \"rtlEnabled\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxResizableComponent.prototype, \"width\", null);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxResizableComponent.prototype, \"onDisposing\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxResizableComponent.prototype, \"onInitialized\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxResizableComponent.prototype, \"onOptionChanged\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxResizableComponent.prototype, \"onResize\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxResizableComponent.prototype, \"onResizeEnd\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxResizableComponent.prototype, \"onResizeStart\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxResizableComponent.prototype, \"elementAttrChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxResizableComponent.prototype, \"handlesChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxResizableComponent.prototype, \"heightChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxResizableComponent.prototype, \"maxHeightChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxResizableComponent.prototype, \"maxWidthChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxResizableComponent.prototype, \"minHeightChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxResizableComponent.prototype, \"minWidthChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxResizableComponent.prototype, \"rtlEnabledChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxResizableComponent.prototype, \"widthChange\", void 0);\r\n    DxResizableComponent = __decorate([\r\n        Component({\r\n            selector: 'dx-resizable',\r\n            template: '<ng-content></ng-content>',\r\n            providers: [\r\n                DxTemplateHost,\r\n                WatcherHelper,\r\n                NestedOptionHost\r\n            ]\r\n        }),\r\n        __param(6, Inject(PLATFORM_ID)),\r\n        __metadata(\"design:paramtypes\", [ElementRef, NgZone, DxTemplateHost,\r\n            WatcherHelper,\r\n            NestedOptionHost,\r\n            TransferState, Object])\r\n    ], DxResizableComponent);\r\n    return DxResizableComponent;\r\n}(DxComponent));\r\nvar DxResizableModule = /** @class */ (function () {\r\n    function DxResizableModule() {\r\n    }\r\n    DxResizableModule = __decorate([\r\n        NgModule({\r\n            imports: [\r\n                DxIntegrationModule,\r\n                DxTemplateModule,\r\n                BrowserTransferStateModule\r\n            ],\r\n            declarations: [\r\n                DxResizableComponent\r\n            ],\r\n            exports: [\r\n                DxResizableComponent,\r\n                DxTemplateModule\r\n            ]\r\n        })\r\n    ], DxResizableModule);\r\n    return DxResizableModule;\r\n}());\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DxResizableComponent, DxResizableModule };\n"]}