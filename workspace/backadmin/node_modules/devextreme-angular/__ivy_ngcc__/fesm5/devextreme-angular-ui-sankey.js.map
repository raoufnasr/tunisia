{"version":3,"sources":["C:/Users/ASUS/Documents/Work/argon-dashboard-pro-angular-v1.1.1/node_modules/devextreme-angular/fesm5/devextreme-angular-ui-sankey.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;AAsoCAirBoC,AAY7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAMmB;;;;;KAKrB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gDAkDkB","file":"devextreme-angular-ui-sankey.js","sourcesContent":["import { __extends, __decorate, __metadata, __param } from 'tslib';\nimport { TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, EventEmitter, Component, NgModule } from '@angular/core';\nimport DxSankey from 'devextreme/viz/sankey';\nimport { DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, DxComponent, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\nimport { DxoAdaptiveLayoutModule, DxoExportModule, DxoLabelModule, DxoBorderModule, DxoFontModule, DxoShadowModule, DxoLinkModule, DxoHoverStyleModule, DxoHatchingModule, DxoLoadingIndicatorModule, DxoMarginModule, DxoNodeModule, DxoSizeModule, DxoTitleModule, DxoSubtitleModule, DxoTooltipModule, DxoFormatModule } from 'devextreme-angular/ui/nested';\n\n/*!\r\n * devextreme-angular\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\n/**\r\n * The Sankey is a widget that visualizes the flow magnitude between value sets. The values being connected are called nodes; the connections - links. The higher the flow magnitude, the wider the link is.\r\n */\r\nvar DxSankeyComponent = /** @class */ (function (_super) {\r\n    __extends(DxSankeyComponent, _super);\r\n    function DxSankeyComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\r\n        var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId) || this;\r\n        _this._watcherHelper = _watcherHelper;\r\n        _this._idh = _idh;\r\n        _this._createEventEmitters([\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'drawn', emit: 'onDrawn' },\r\n            { subscribe: 'exported', emit: 'onExported' },\r\n            { subscribe: 'exporting', emit: 'onExporting' },\r\n            { subscribe: 'fileSaving', emit: 'onFileSaving' },\r\n            { subscribe: 'incidentOccurred', emit: 'onIncidentOccurred' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'linkClick', emit: 'onLinkClick' },\r\n            { subscribe: 'linkHoverChanged', emit: 'onLinkHoverChanged' },\r\n            { subscribe: 'nodeClick', emit: 'onNodeClick' },\r\n            { subscribe: 'nodeHoverChanged', emit: 'onNodeHoverChanged' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { emit: 'adaptiveLayoutChange' },\r\n            { emit: 'alignmentChange' },\r\n            { emit: 'dataSourceChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'exportChange' },\r\n            { emit: 'hoverEnabledChange' },\r\n            { emit: 'labelChange' },\r\n            { emit: 'linkChange' },\r\n            { emit: 'loadingIndicatorChange' },\r\n            { emit: 'marginChange' },\r\n            { emit: 'nodeChange' },\r\n            { emit: 'paletteChange' },\r\n            { emit: 'paletteExtensionModeChange' },\r\n            { emit: 'pathModifiedChange' },\r\n            { emit: 'redrawOnResizeChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'sizeChange' },\r\n            { emit: 'sortDataChange' },\r\n            { emit: 'sourceFieldChange' },\r\n            { emit: 'targetFieldChange' },\r\n            { emit: 'themeChange' },\r\n            { emit: 'titleChange' },\r\n            { emit: 'tooltipChange' },\r\n            { emit: 'weightFieldChange' }\r\n        ]);\r\n        _this._idh.setHost(_this);\r\n        optionHost.setHost(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DxSankeyComponent.prototype, \"adaptiveLayout\", {\r\n        /**\r\n         * Specifies adaptive layout options.\r\n         */\r\n        get: function () {\r\n            return this._getOption('adaptiveLayout');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('adaptiveLayout', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSankeyComponent.prototype, \"alignment\", {\r\n        /**\r\n         * Aligns node columns vertically.\r\n         */\r\n        get: function () {\r\n            return this._getOption('alignment');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('alignment', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSankeyComponent.prototype, \"dataSource\", {\r\n        /**\r\n         * Binds the widget to data.\r\n         */\r\n        get: function () {\r\n            return this._getOption('dataSource');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('dataSource', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSankeyComponent.prototype, \"disabled\", {\r\n        /**\r\n         * Specifies whether the widget responds to the user interaction.\r\n         */\r\n        get: function () {\r\n            return this._getOption('disabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('disabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSankeyComponent.prototype, \"elementAttr\", {\r\n        /**\r\n         * Specifies the attributes to be attached to the widget's root element.\r\n         */\r\n        get: function () {\r\n            return this._getOption('elementAttr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('elementAttr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSankeyComponent.prototype, \"export\", {\r\n        /**\r\n         * Configures the exporting and printing features.\r\n         */\r\n        get: function () {\r\n            return this._getOption('export');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('export', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSankeyComponent.prototype, \"hoverEnabled\", {\r\n        /**\r\n         * Specifies whether nodes and links change their style when they are hovered over or pressed.\r\n         */\r\n        get: function () {\r\n            return this._getOption('hoverEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hoverEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSankeyComponent.prototype, \"label\", {\r\n        /**\r\n         * Configures sankey nodes' labels.\r\n         */\r\n        get: function () {\r\n            return this._getOption('label');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('label', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSankeyComponent.prototype, \"link\", {\r\n        /**\r\n         * Configures sankey links' appearance.\r\n         */\r\n        get: function () {\r\n            return this._getOption('link');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('link', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSankeyComponent.prototype, \"loadingIndicator\", {\r\n        /**\r\n         * Configures the loading indicator.\r\n         */\r\n        get: function () {\r\n            return this._getOption('loadingIndicator');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('loadingIndicator', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSankeyComponent.prototype, \"margin\", {\r\n        /**\r\n         * Generates space around the widget.\r\n         */\r\n        get: function () {\r\n            return this._getOption('margin');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('margin', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSankeyComponent.prototype, \"node\", {\r\n        /**\r\n         * Configures sankey nodes' appearance.\r\n         */\r\n        get: function () {\r\n            return this._getOption('node');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('node', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSankeyComponent.prototype, \"palette\", {\r\n        /**\r\n         * Sets the palette to be used to colorize sankey nodes.\r\n         */\r\n        get: function () {\r\n            return this._getOption('palette');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('palette', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSankeyComponent.prototype, \"paletteExtensionMode\", {\r\n        /**\r\n         * Specifies how to extend the palette when it contains less colors than the number of sankey nodes.\r\n         */\r\n        get: function () {\r\n            return this._getOption('paletteExtensionMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('paletteExtensionMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSankeyComponent.prototype, \"pathModified\", {\r\n        /**\r\n         * Notifies the widget that it is embedded into an HTML page that uses a tag modifying the path.\r\n         */\r\n        get: function () {\r\n            return this._getOption('pathModified');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('pathModified', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSankeyComponent.prototype, \"redrawOnResize\", {\r\n        /**\r\n         * Specifies whether to redraw the widget when the size of the parent browser window changes or a mobile device rotates.\r\n         */\r\n        get: function () {\r\n            return this._getOption('redrawOnResize');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('redrawOnResize', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSankeyComponent.prototype, \"rtlEnabled\", {\r\n        /**\r\n         * Switches the widget to a right-to-left representation.\r\n         */\r\n        get: function () {\r\n            return this._getOption('rtlEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('rtlEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSankeyComponent.prototype, \"size\", {\r\n        /**\r\n         * Specifies the widget's size in pixels.\r\n         */\r\n        get: function () {\r\n            return this._getOption('size');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('size', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSankeyComponent.prototype, \"sortData\", {\r\n        /**\r\n         * Specifies nodes' sorting order in their columns.\r\n         */\r\n        get: function () {\r\n            return this._getOption('sortData');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('sortData', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSankeyComponent.prototype, \"sourceField\", {\r\n        /**\r\n         * Specifies which data source field provides links' source nodes.\r\n         */\r\n        get: function () {\r\n            return this._getOption('sourceField');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('sourceField', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSankeyComponent.prototype, \"targetField\", {\r\n        /**\r\n         * Specifies which data source field provides links' target nodes.\r\n         */\r\n        get: function () {\r\n            return this._getOption('targetField');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('targetField', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSankeyComponent.prototype, \"theme\", {\r\n        /**\r\n         * Sets the name of the theme the widget uses.\r\n         */\r\n        get: function () {\r\n            return this._getOption('theme');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('theme', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSankeyComponent.prototype, \"title\", {\r\n        /**\r\n         * Configures the widget's title.\r\n         */\r\n        get: function () {\r\n            return this._getOption('title');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('title', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSankeyComponent.prototype, \"tooltip\", {\r\n        /**\r\n         * Configures tooltips - small pop-up rectangles that display information about a data-visualizing widget element being pressed or hovered over with the mouse pointer.\r\n         */\r\n        get: function () {\r\n            return this._getOption('tooltip');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('tooltip', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxSankeyComponent.prototype, \"weightField\", {\r\n        /**\r\n         * Specifies which data source field provides links' weights.\r\n         */\r\n        get: function () {\r\n            return this._getOption('weightField');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('weightField', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxSankeyComponent.prototype._createInstance = function (element, options) {\r\n        return new DxSankey(element, options);\r\n    };\r\n    DxSankeyComponent.prototype.ngOnDestroy = function () {\r\n        this._destroyWidget();\r\n    };\r\n    DxSankeyComponent.prototype.ngOnChanges = function (changes) {\r\n        _super.prototype.ngOnChanges.call(this, changes);\r\n        this.setupChanges('alignment', changes);\r\n        this.setupChanges('dataSource', changes);\r\n        this.setupChanges('palette', changes);\r\n    };\r\n    DxSankeyComponent.prototype.setupChanges = function (prop, changes) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    };\r\n    DxSankeyComponent.prototype.ngDoCheck = function () {\r\n        this._idh.doCheck('alignment');\r\n        this._idh.doCheck('dataSource');\r\n        this._idh.doCheck('palette');\r\n        this._watcherHelper.checkWatchers();\r\n        _super.prototype.ngDoCheck.call(this);\r\n        _super.prototype.clearChangedOptions.call(this);\r\n    };\r\n    DxSankeyComponent.prototype._setOption = function (name, value) {\r\n        var isSetup = this._idh.setupSingle(name, value);\r\n        var isChanged = this._idh.getChanges(name, value) !== null;\r\n        if (isSetup || isChanged) {\r\n            _super.prototype._setOption.call(this, name, value);\r\n        }\r\n    };\r\n    DxSankeyComponent.ctorParameters = function () { return [\r\n        { type: ElementRef },\r\n        { type: NgZone },\r\n        { type: DxTemplateHost },\r\n        { type: WatcherHelper },\r\n        { type: IterableDifferHelper },\r\n        { type: NestedOptionHost },\r\n        { type: TransferState },\r\n        { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\r\n    ]; };\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxSankeyComponent.prototype, \"adaptiveLayout\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxSankeyComponent.prototype, \"alignment\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxSankeyComponent.prototype, \"dataSource\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxSankeyComponent.prototype, \"disabled\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxSankeyComponent.prototype, \"elementAttr\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxSankeyComponent.prototype, \"export\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxSankeyComponent.prototype, \"hoverEnabled\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxSankeyComponent.prototype, \"label\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxSankeyComponent.prototype, \"link\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxSankeyComponent.prototype, \"loadingIndicator\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxSankeyComponent.prototype, \"margin\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxSankeyComponent.prototype, \"node\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxSankeyComponent.prototype, \"palette\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxSankeyComponent.prototype, \"paletteExtensionMode\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxSankeyComponent.prototype, \"pathModified\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxSankeyComponent.prototype, \"redrawOnResize\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxSankeyComponent.prototype, \"rtlEnabled\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxSankeyComponent.prototype, \"size\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxSankeyComponent.prototype, \"sortData\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxSankeyComponent.prototype, \"sourceField\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxSankeyComponent.prototype, \"targetField\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxSankeyComponent.prototype, \"theme\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxSankeyComponent.prototype, \"title\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxSankeyComponent.prototype, \"tooltip\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxSankeyComponent.prototype, \"weightField\", null);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"onDisposing\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"onDrawn\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"onExported\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"onExporting\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"onFileSaving\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"onIncidentOccurred\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"onInitialized\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"onLinkClick\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"onLinkHoverChanged\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"onNodeClick\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"onNodeHoverChanged\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"onOptionChanged\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"adaptiveLayoutChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"alignmentChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"dataSourceChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"disabledChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"elementAttrChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"exportChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"hoverEnabledChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"labelChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"linkChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"loadingIndicatorChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"marginChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"nodeChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"paletteChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"paletteExtensionModeChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"pathModifiedChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"redrawOnResizeChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"rtlEnabledChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"sizeChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"sortDataChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"sourceFieldChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"targetFieldChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"themeChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"titleChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"tooltipChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxSankeyComponent.prototype, \"weightFieldChange\", void 0);\r\n    DxSankeyComponent = __decorate([\r\n        Component({\r\n            selector: 'dx-sankey',\r\n            template: '',\r\n            providers: [\r\n                DxTemplateHost,\r\n                WatcherHelper,\r\n                NestedOptionHost,\r\n                IterableDifferHelper\r\n            ],\r\n            styles: [' :host {  display: block; }']\r\n        }),\r\n        __param(7, Inject(PLATFORM_ID)),\r\n        __metadata(\"design:paramtypes\", [ElementRef, NgZone, DxTemplateHost,\r\n            WatcherHelper,\r\n            IterableDifferHelper,\r\n            NestedOptionHost,\r\n            TransferState, Object])\r\n    ], DxSankeyComponent);\r\n    return DxSankeyComponent;\r\n}(DxComponent));\r\nvar DxSankeyModule = /** @class */ (function () {\r\n    function DxSankeyModule() {\r\n    }\r\n    DxSankeyModule = __decorate([\r\n        NgModule({\r\n            imports: [\r\n                DxoAdaptiveLayoutModule,\r\n                DxoExportModule,\r\n                DxoLabelModule,\r\n                DxoBorderModule,\r\n                DxoFontModule,\r\n                DxoShadowModule,\r\n                DxoLinkModule,\r\n                DxoHoverStyleModule,\r\n                DxoHatchingModule,\r\n                DxoLoadingIndicatorModule,\r\n                DxoMarginModule,\r\n                DxoNodeModule,\r\n                DxoSizeModule,\r\n                DxoTitleModule,\r\n                DxoSubtitleModule,\r\n                DxoTooltipModule,\r\n                DxoFormatModule,\r\n                DxIntegrationModule,\r\n                DxTemplateModule,\r\n                BrowserTransferStateModule\r\n            ],\r\n            declarations: [\r\n                DxSankeyComponent\r\n            ],\r\n            exports: [\r\n                DxSankeyComponent,\r\n                DxoAdaptiveLayoutModule,\r\n                DxoExportModule,\r\n                DxoLabelModule,\r\n                DxoBorderModule,\r\n                DxoFontModule,\r\n                DxoShadowModule,\r\n                DxoLinkModule,\r\n                DxoHoverStyleModule,\r\n                DxoHatchingModule,\r\n                DxoLoadingIndicatorModule,\r\n                DxoMarginModule,\r\n                DxoNodeModule,\r\n                DxoSizeModule,\r\n                DxoTitleModule,\r\n                DxoSubtitleModule,\r\n                DxoTooltipModule,\r\n                DxoFormatModule,\r\n                DxTemplateModule\r\n            ]\r\n        })\r\n    ], DxSankeyModule);\r\n    return DxSankeyModule;\r\n}());\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DxSankeyComponent, DxSankeyModule };\n"]}