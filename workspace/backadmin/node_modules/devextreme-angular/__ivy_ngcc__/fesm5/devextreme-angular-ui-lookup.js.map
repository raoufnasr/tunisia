{"version":3,"sources":["C:/Users/ASUS/Documents/Work/argon-dashboard-pro-angular-v1.1.1/node_modules/devextreme-angular/fesm5/devextreme-angular-ui-lookup.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAqoCAmxDoC,AAY7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAMmB;;;;;KAKrB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gDAoCkB","file":"devextreme-angular-ui-lookup.js","sourcesContent":["import { __extends, __decorate, __metadata, __param } from 'tslib';\nimport { TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { forwardRef, ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, EventEmitter, HostListener, ContentChildren, QueryList, Component, NgModule } from '@angular/core';\nimport 'devextreme/bundles/dx.all';\nimport DxLookup from 'devextreme/ui/lookup';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, DxComponent, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\nimport { DxiItemComponent, DxoAnimationModule, DxoHideModule, DxoShowModule, DxiItemModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule } from 'devextreme-angular/ui/nested';\n\n/*!\r\n * devextreme-angular\r\n * Version: 19.2.6\r\n * Build date: Thu Jan 30 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nvar CUSTOM_VALUE_ACCESSOR_PROVIDER = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(function () { return DxLookupComponent; }),\r\n    multi: true\r\n};\r\n/**\r\n * The Lookup is a widget that allows an end user to search for an item in a collection shown in a drop-down menu.\r\n */\r\nvar DxLookupComponent = /** @class */ (function (_super) {\r\n    __extends(DxLookupComponent, _super);\r\n    function DxLookupComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\r\n        var _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId) || this;\r\n        _this._watcherHelper = _watcherHelper;\r\n        _this._idh = _idh;\r\n        _this.touched = function (_) { };\r\n        _this._createEventEmitters([\r\n            { subscribe: 'closed', emit: 'onClosed' },\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'itemClick', emit: 'onItemClick' },\r\n            { subscribe: 'opened', emit: 'onOpened' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'pageLoading', emit: 'onPageLoading' },\r\n            { subscribe: 'pullRefresh', emit: 'onPullRefresh' },\r\n            { subscribe: 'scroll', emit: 'onScroll' },\r\n            { subscribe: 'selectionChanged', emit: 'onSelectionChanged' },\r\n            { subscribe: 'titleRendered', emit: 'onTitleRendered' },\r\n            { subscribe: 'valueChanged', emit: 'onValueChanged' },\r\n            { emit: 'accessKeyChange' },\r\n            { emit: 'activeStateEnabledChange' },\r\n            { emit: 'animationChange' },\r\n            { emit: 'applyButtonTextChange' },\r\n            { emit: 'applyValueModeChange' },\r\n            { emit: 'cancelButtonTextChange' },\r\n            { emit: 'cleanSearchOnOpeningChange' },\r\n            { emit: 'clearButtonTextChange' },\r\n            { emit: 'closeOnOutsideClickChange' },\r\n            { emit: 'dataSourceChange' },\r\n            { emit: 'deferRenderingChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'displayExprChange' },\r\n            { emit: 'displayValueChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'fieldTemplateChange' },\r\n            { emit: 'focusStateEnabledChange' },\r\n            { emit: 'fullScreenChange' },\r\n            { emit: 'groupedChange' },\r\n            { emit: 'groupTemplateChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'inputAttrChange' },\r\n            { emit: 'isValidChange' },\r\n            { emit: 'itemsChange' },\r\n            { emit: 'itemTemplateChange' },\r\n            { emit: 'minSearchLengthChange' },\r\n            { emit: 'nameChange' },\r\n            { emit: 'nextButtonTextChange' },\r\n            { emit: 'noDataTextChange' },\r\n            { emit: 'openedChange' },\r\n            { emit: 'pageLoadingTextChange' },\r\n            { emit: 'pageLoadModeChange' },\r\n            { emit: 'placeholderChange' },\r\n            { emit: 'popupHeightChange' },\r\n            { emit: 'popupWidthChange' },\r\n            { emit: 'positionChange' },\r\n            { emit: 'pulledDownTextChange' },\r\n            { emit: 'pullingDownTextChange' },\r\n            { emit: 'pullRefreshEnabledChange' },\r\n            { emit: 'refreshingTextChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'searchEnabledChange' },\r\n            { emit: 'searchExprChange' },\r\n            { emit: 'searchModeChange' },\r\n            { emit: 'searchPlaceholderChange' },\r\n            { emit: 'searchTimeoutChange' },\r\n            { emit: 'selectedItemChange' },\r\n            { emit: 'shadingChange' },\r\n            { emit: 'showCancelButtonChange' },\r\n            { emit: 'showClearButtonChange' },\r\n            { emit: 'showDataBeforeSearchChange' },\r\n            { emit: 'showPopupTitleChange' },\r\n            { emit: 'stylingModeChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'textChange' },\r\n            { emit: 'titleChange' },\r\n            { emit: 'titleTemplateChange' },\r\n            { emit: 'useNativeScrollingChange' },\r\n            { emit: 'usePopoverChange' },\r\n            { emit: 'validationErrorChange' },\r\n            { emit: 'validationErrorsChange' },\r\n            { emit: 'validationMessageModeChange' },\r\n            { emit: 'validationStatusChange' },\r\n            { emit: 'valueChange' },\r\n            { emit: 'valueChangeEventChange' },\r\n            { emit: 'valueExprChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' },\r\n            { emit: 'wrapItemTextChange' },\r\n            { emit: 'onBlur' }\r\n        ]);\r\n        _this._idh.setHost(_this);\r\n        optionHost.setHost(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DxLookupComponent.prototype, \"accessKey\", {\r\n        /**\r\n         * Specifies the shortcut key that sets focus on the widget.\r\n         */\r\n        get: function () {\r\n            return this._getOption('accessKey');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('accessKey', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"activeStateEnabled\", {\r\n        /**\r\n         * Specifies whether or not the widget changes its state when interacting with a user.\r\n         */\r\n        get: function () {\r\n            return this._getOption('activeStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('activeStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"animation\", {\r\n        /**\r\n         * Configures widget visibility animations. This object contains two fields: show and hide.\r\n         */\r\n        get: function () {\r\n            return this._getOption('animation');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('animation', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"applyButtonText\", {\r\n        /**\r\n         * The text displayed on the Apply button.\r\n         */\r\n        get: function () {\r\n            return this._getOption('applyButtonText');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('applyButtonText', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"applyValueMode\", {\r\n        /**\r\n         * Specifies the way an end-user applies the selected value.\r\n         */\r\n        get: function () {\r\n            return this._getOption('applyValueMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('applyValueMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"cancelButtonText\", {\r\n        /**\r\n         * The text displayed on the Cancel button.\r\n         */\r\n        get: function () {\r\n            return this._getOption('cancelButtonText');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('cancelButtonText', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"cleanSearchOnOpening\", {\r\n        /**\r\n         * Specifies whether or not the widget cleans the search box when the popup window is displayed.\r\n         */\r\n        get: function () {\r\n            return this._getOption('cleanSearchOnOpening');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('cleanSearchOnOpening', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"clearButtonText\", {\r\n        /**\r\n         * The text displayed on the Clear button.\r\n         */\r\n        get: function () {\r\n            return this._getOption('clearButtonText');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('clearButtonText', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"closeOnOutsideClick\", {\r\n        /**\r\n         * Specifies whether to close the drop-down menu if a user clicks outside it.\r\n         */\r\n        get: function () {\r\n            return this._getOption('closeOnOutsideClick');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('closeOnOutsideClick', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"dataSource\", {\r\n        /**\r\n         * Binds the widget to data.\r\n         */\r\n        get: function () {\r\n            return this._getOption('dataSource');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('dataSource', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"deferRendering\", {\r\n        /**\r\n         * Specifies whether to render the drop-down field's content when it is displayed. If false, the content is rendered immediately.\r\n         */\r\n        get: function () {\r\n            return this._getOption('deferRendering');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('deferRendering', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"disabled\", {\r\n        /**\r\n         * Specifies whether the widget responds to user interaction.\r\n         */\r\n        get: function () {\r\n            return this._getOption('disabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('disabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"displayExpr\", {\r\n        /**\r\n         * Specifies the data field whose values should be displayed.\r\n         */\r\n        get: function () {\r\n            return this._getOption('displayExpr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('displayExpr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"displayValue\", {\r\n        /**\r\n         * Returns the value currently displayed by the widget.\r\n         */\r\n        get: function () {\r\n            return this._getOption('displayValue');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('displayValue', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"elementAttr\", {\r\n        /**\r\n         * Specifies the attributes to be attached to the widget's root element.\r\n         */\r\n        get: function () {\r\n            return this._getOption('elementAttr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('elementAttr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"fieldTemplate\", {\r\n        /**\r\n         * Specifies a custom template for the input field.\r\n         */\r\n        get: function () {\r\n            return this._getOption('fieldTemplate');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('fieldTemplate', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"focusStateEnabled\", {\r\n        /**\r\n         * Specifies whether the widget can be focused using keyboard navigation.\r\n         */\r\n        get: function () {\r\n            return this._getOption('focusStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('focusStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"fullScreen\", {\r\n        /**\r\n         * A Boolean value specifying whether or not to display the lookup in full-screen mode.\r\n         */\r\n        get: function () {\r\n            return this._getOption('fullScreen');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('fullScreen', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"grouped\", {\r\n        /**\r\n         * A Boolean value specifying whether or not to group widget items.\r\n         */\r\n        get: function () {\r\n            return this._getOption('grouped');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('grouped', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"groupTemplate\", {\r\n        /**\r\n         * Specifies a custom template for group captions.\r\n         */\r\n        get: function () {\r\n            return this._getOption('groupTemplate');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('groupTemplate', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"height\", {\r\n        /**\r\n         * Specifies the widget's height.\r\n         */\r\n        get: function () {\r\n            return this._getOption('height');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('height', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"hint\", {\r\n        /**\r\n         * Specifies text for a hint that appears when a user pauses on the widget.\r\n         */\r\n        get: function () {\r\n            return this._getOption('hint');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hint', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"hoverStateEnabled\", {\r\n        /**\r\n         * Specifies whether the widget changes its state when a user pauses on it.\r\n         */\r\n        get: function () {\r\n            return this._getOption('hoverStateEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('hoverStateEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"inputAttr\", {\r\n        /**\r\n         * Specifies the attributes to be passed on to the underlying HTML element.\r\n         */\r\n        get: function () {\r\n            return this._getOption('inputAttr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('inputAttr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"isValid\", {\r\n        /**\r\n         * Specifies or indicates whether the editor's value is valid.\r\n         */\r\n        get: function () {\r\n            return this._getOption('isValid');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('isValid', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"items\", {\r\n        /**\r\n         * An array of items displayed by the widget.\r\n         */\r\n        get: function () {\r\n            return this._getOption('items');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('items', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"itemTemplate\", {\r\n        /**\r\n         * Specifies a custom template for items.\r\n         */\r\n        get: function () {\r\n            return this._getOption('itemTemplate');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('itemTemplate', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"minSearchLength\", {\r\n        /**\r\n         * The minimum number of characters that must be entered into the text box to begin a search. Applies only if searchEnabled is true.\r\n         */\r\n        get: function () {\r\n            return this._getOption('minSearchLength');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('minSearchLength', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"name\", {\r\n        /**\r\n         * The value to be assigned to the `name` attribute of the underlying HTML element.\r\n         */\r\n        get: function () {\r\n            return this._getOption('name');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('name', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"nextButtonText\", {\r\n        /**\r\n         * The text displayed on the button used to load the next page from the data source.\r\n         */\r\n        get: function () {\r\n            return this._getOption('nextButtonText');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('nextButtonText', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"noDataText\", {\r\n        /**\r\n         * The text or HTML markup displayed by the widget if the item collection is empty.\r\n         */\r\n        get: function () {\r\n            return this._getOption('noDataText');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('noDataText', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"opened\", {\r\n        /**\r\n         * Specifies whether or not the drop-down editor is displayed.\r\n         */\r\n        get: function () {\r\n            return this._getOption('opened');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('opened', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"pageLoadingText\", {\r\n        /**\r\n         * Specifies the text shown in the pullDown panel, which is displayed when the widget is scrolled to the bottom.\r\n         */\r\n        get: function () {\r\n            return this._getOption('pageLoadingText');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('pageLoadingText', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"pageLoadMode\", {\r\n        /**\r\n         * Specifies whether the next page is loaded when a user scrolls the widget to the bottom or when the \"next\" button is clicked.\r\n         */\r\n        get: function () {\r\n            return this._getOption('pageLoadMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('pageLoadMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"placeholder\", {\r\n        /**\r\n         * The text displayed by the widget when nothing is selected.\r\n         */\r\n        get: function () {\r\n            return this._getOption('placeholder');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('placeholder', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"popupHeight\", {\r\n        /**\r\n         * Specifies the popup element's height. Applies only if fullScreen is false.\r\n         */\r\n        get: function () {\r\n            return this._getOption('popupHeight');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('popupHeight', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"popupWidth\", {\r\n        /**\r\n         * Specifies the popup element's width. Applies only if fullScreen is false.\r\n         */\r\n        get: function () {\r\n            return this._getOption('popupWidth');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('popupWidth', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"position\", {\r\n        /**\r\n         * An object defining widget positioning options.\r\n         */\r\n        get: function () {\r\n            return this._getOption('position');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('position', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"pulledDownText\", {\r\n        /**\r\n         * Specifies the text displayed in the pullDown panel when the widget is pulled below the refresh threshold.\r\n         */\r\n        get: function () {\r\n            return this._getOption('pulledDownText');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('pulledDownText', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"pullingDownText\", {\r\n        /**\r\n         * Specifies the text shown in the pullDown panel while the list is being pulled down to the refresh threshold.\r\n         */\r\n        get: function () {\r\n            return this._getOption('pullingDownText');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('pullingDownText', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"pullRefreshEnabled\", {\r\n        /**\r\n         * A Boolean value specifying whether or not the widget supports the \"pull down to refresh\" gesture.\r\n         */\r\n        get: function () {\r\n            return this._getOption('pullRefreshEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('pullRefreshEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"refreshingText\", {\r\n        /**\r\n         * Specifies the text displayed in the pullDown panel while the widget is being refreshed.\r\n         */\r\n        get: function () {\r\n            return this._getOption('refreshingText');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('refreshingText', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"rtlEnabled\", {\r\n        /**\r\n         * Switches the widget to a right-to-left representation.\r\n         */\r\n        get: function () {\r\n            return this._getOption('rtlEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('rtlEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"searchEnabled\", {\r\n        /**\r\n         * Specifies whether the search box is visible.\r\n         */\r\n        get: function () {\r\n            return this._getOption('searchEnabled');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('searchEnabled', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"searchExpr\", {\r\n        /**\r\n         * Specifies the name of a data source item field or an expression whose value is compared to the search criterion.\r\n         */\r\n        get: function () {\r\n            return this._getOption('searchExpr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('searchExpr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"searchMode\", {\r\n        /**\r\n         * Specifies a comparison operation used to search widget items.\r\n         */\r\n        get: function () {\r\n            return this._getOption('searchMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('searchMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"searchPlaceholder\", {\r\n        /**\r\n         * The text that is provided as a hint in the lookup's search bar.\r\n         */\r\n        get: function () {\r\n            return this._getOption('searchPlaceholder');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('searchPlaceholder', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"searchTimeout\", {\r\n        /**\r\n         * Specifies the time delay, in milliseconds, after the last character has been typed in, before a search is executed.\r\n         */\r\n        get: function () {\r\n            return this._getOption('searchTimeout');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('searchTimeout', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"selectedItem\", {\r\n        /**\r\n         * Gets the currently selected item.\r\n         */\r\n        get: function () {\r\n            return this._getOption('selectedItem');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('selectedItem', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"shading\", {\r\n        /**\r\n         * Specifies whether to shade the container when the lookup is active. Applies only if usePopover is false.\r\n         */\r\n        get: function () {\r\n            return this._getOption('shading');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('shading', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"showCancelButton\", {\r\n        /**\r\n         * Specifies whether to display the Cancel button in the lookup window.\r\n         */\r\n        get: function () {\r\n            return this._getOption('showCancelButton');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('showCancelButton', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"showClearButton\", {\r\n        /**\r\n         * Specifies whether or not to display the Clear button in the lookup window.\r\n         */\r\n        get: function () {\r\n            return this._getOption('showClearButton');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('showClearButton', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"showDataBeforeSearch\", {\r\n        /**\r\n         * Specifies whether or not the widget displays unfiltered values until a user types a number of characters exceeding the minSearchLength option value.\r\n         */\r\n        get: function () {\r\n            return this._getOption('showDataBeforeSearch');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('showDataBeforeSearch', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"showPopupTitle\", {\r\n        /**\r\n         * A Boolean value specifying whether or not to display the title in the popup window.\r\n         */\r\n        get: function () {\r\n            return this._getOption('showPopupTitle');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('showPopupTitle', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"stylingMode\", {\r\n        /**\r\n         * Specifies how the widget's text field is styled.\r\n         */\r\n        get: function () {\r\n            return this._getOption('stylingMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('stylingMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"tabIndex\", {\r\n        /**\r\n         * Specifies the number of the element when the Tab key is used for navigating.\r\n         */\r\n        get: function () {\r\n            return this._getOption('tabIndex');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('tabIndex', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"text\", {\r\n        /**\r\n         * The read-only option that holds the text displayed by the widget input element.\r\n         */\r\n        get: function () {\r\n            return this._getOption('text');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('text', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"title\", {\r\n        /**\r\n         * The title of the lookup window.\r\n         */\r\n        get: function () {\r\n            return this._getOption('title');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('title', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"titleTemplate\", {\r\n        /**\r\n         * Specifies a custom template for the title.\r\n         */\r\n        get: function () {\r\n            return this._getOption('titleTemplate');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('titleTemplate', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"useNativeScrolling\", {\r\n        /**\r\n         * Specifies whether or not the widget uses native scrolling.\r\n         */\r\n        get: function () {\r\n            return this._getOption('useNativeScrolling');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('useNativeScrolling', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"usePopover\", {\r\n        /**\r\n         * Specifies whether or not to show lookup contents in a Popover widget.\r\n         */\r\n        get: function () {\r\n            return this._getOption('usePopover');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('usePopover', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"validationError\", {\r\n        /**\r\n         * Information on the broken validation rule. Contains the first item from the validationErrors array.\r\n         */\r\n        get: function () {\r\n            return this._getOption('validationError');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('validationError', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"validationErrors\", {\r\n        /**\r\n         * An array of the validation rules that failed.\r\n         */\r\n        get: function () {\r\n            return this._getOption('validationErrors');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('validationErrors', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"validationMessageMode\", {\r\n        /**\r\n         * Specifies how the message about the validation rules that are not satisfied by this editor's value is displayed.\r\n         */\r\n        get: function () {\r\n            return this._getOption('validationMessageMode');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('validationMessageMode', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"validationStatus\", {\r\n        /**\r\n         * Indicates or specifies the current validation status.\r\n         */\r\n        get: function () {\r\n            return this._getOption('validationStatus');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('validationStatus', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"value\", {\r\n        /**\r\n         * Specifies the currently selected value. May be an object if dataSource contains objects and valueExpr is not set.\r\n         */\r\n        get: function () {\r\n            return this._getOption('value');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('value', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"valueChangeEvent\", {\r\n        /**\r\n         * Specifies the DOM events after which the widget's value should be updated.\r\n         */\r\n        get: function () {\r\n            return this._getOption('valueChangeEvent');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('valueChangeEvent', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"valueExpr\", {\r\n        /**\r\n         * Specifies which data field provides unique values to the widget's value.\r\n         */\r\n        get: function () {\r\n            return this._getOption('valueExpr');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('valueExpr', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"visible\", {\r\n        /**\r\n         * Specifies whether the widget is visible.\r\n         */\r\n        get: function () {\r\n            return this._getOption('visible');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('visible', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"width\", {\r\n        /**\r\n         * Specifies the widget's width.\r\n         */\r\n        get: function () {\r\n            return this._getOption('width');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('width', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DxLookupComponent.prototype, \"wrapItemText\", {\r\n        /**\r\n         * Specifies whether text that exceeds the drop-down list width should be wrapped.\r\n         */\r\n        get: function () {\r\n            return this._getOption('wrapItemText');\r\n        },\r\n        set: function (value) {\r\n            this._setOption('wrapItemText', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxLookupComponent.prototype.change = function (_) { };\r\n    Object.defineProperty(DxLookupComponent.prototype, \"itemsChildren\", {\r\n        get: function () {\r\n            return this._getOption('items');\r\n        },\r\n        set: function (value) {\r\n            this.setChildren('items', value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DxLookupComponent.prototype._createInstance = function (element, options) {\r\n        return new DxLookup(element, options);\r\n    };\r\n    DxLookupComponent.prototype.writeValue = function (value) {\r\n        this.eventHelper.lockedValueChangeEvent = true;\r\n        this.value = value;\r\n        this.eventHelper.lockedValueChangeEvent = false;\r\n    };\r\n    DxLookupComponent.prototype.setDisabledState = function (isDisabled) {\r\n        this.disabled = isDisabled;\r\n    };\r\n    DxLookupComponent.prototype.registerOnChange = function (fn) { this.change = fn; };\r\n    DxLookupComponent.prototype.registerOnTouched = function (fn) { this.touched = fn; };\r\n    DxLookupComponent.prototype._createWidget = function (element) {\r\n        var _this = this;\r\n        _super.prototype._createWidget.call(this, element);\r\n        this.instance.on('focusOut', function (e) {\r\n            _this.eventHelper.fireNgEvent('onBlur', [e]);\r\n        });\r\n    };\r\n    DxLookupComponent.prototype.ngOnDestroy = function () {\r\n        this._destroyWidget();\r\n    };\r\n    DxLookupComponent.prototype.ngOnChanges = function (changes) {\r\n        _super.prototype.ngOnChanges.call(this, changes);\r\n        this.setupChanges('dataSource', changes);\r\n        this.setupChanges('items', changes);\r\n        this.setupChanges('searchExpr', changes);\r\n        this.setupChanges('validationErrors', changes);\r\n    };\r\n    DxLookupComponent.prototype.setupChanges = function (prop, changes) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    };\r\n    DxLookupComponent.prototype.ngDoCheck = function () {\r\n        this._idh.doCheck('dataSource');\r\n        this._idh.doCheck('items');\r\n        this._idh.doCheck('searchExpr');\r\n        this._idh.doCheck('validationErrors');\r\n        this._watcherHelper.checkWatchers();\r\n        _super.prototype.ngDoCheck.call(this);\r\n        _super.prototype.clearChangedOptions.call(this);\r\n    };\r\n    DxLookupComponent.prototype._setOption = function (name, value) {\r\n        var isSetup = this._idh.setupSingle(name, value);\r\n        var isChanged = this._idh.getChanges(name, value) !== null;\r\n        if (isSetup || isChanged) {\r\n            _super.prototype._setOption.call(this, name, value);\r\n        }\r\n    };\r\n    DxLookupComponent.ctorParameters = function () { return [\r\n        { type: ElementRef },\r\n        { type: NgZone },\r\n        { type: DxTemplateHost },\r\n        { type: WatcherHelper },\r\n        { type: IterableDifferHelper },\r\n        { type: NestedOptionHost },\r\n        { type: TransferState },\r\n        { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\r\n    ]; };\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxLookupComponent.prototype, \"accessKey\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxLookupComponent.prototype, \"activeStateEnabled\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxLookupComponent.prototype, \"animation\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxLookupComponent.prototype, \"applyButtonText\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxLookupComponent.prototype, \"applyValueMode\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxLookupComponent.prototype, \"cancelButtonText\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxLookupComponent.prototype, \"cleanSearchOnOpening\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxLookupComponent.prototype, \"clearButtonText\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxLookupComponent.prototype, \"closeOnOutsideClick\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxLookupComponent.prototype, \"dataSource\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxLookupComponent.prototype, \"deferRendering\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxLookupComponent.prototype, \"disabled\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxLookupComponent.prototype, \"displayExpr\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxLookupComponent.prototype, \"displayValue\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxLookupComponent.prototype, \"elementAttr\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxLookupComponent.prototype, \"fieldTemplate\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxLookupComponent.prototype, \"focusStateEnabled\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxLookupComponent.prototype, \"fullScreen\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxLookupComponent.prototype, \"grouped\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxLookupComponent.prototype, \"groupTemplate\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxLookupComponent.prototype, \"height\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxLookupComponent.prototype, \"hint\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxLookupComponent.prototype, \"hoverStateEnabled\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxLookupComponent.prototype, \"inputAttr\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxLookupComponent.prototype, \"isValid\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Array),\r\n        __metadata(\"design:paramtypes\", [Array])\r\n    ], DxLookupComponent.prototype, \"items\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxLookupComponent.prototype, \"itemTemplate\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Number),\r\n        __metadata(\"design:paramtypes\", [Number])\r\n    ], DxLookupComponent.prototype, \"minSearchLength\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxLookupComponent.prototype, \"name\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxLookupComponent.prototype, \"nextButtonText\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxLookupComponent.prototype, \"noDataText\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxLookupComponent.prototype, \"opened\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxLookupComponent.prototype, \"pageLoadingText\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxLookupComponent.prototype, \"pageLoadMode\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxLookupComponent.prototype, \"placeholder\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxLookupComponent.prototype, \"popupHeight\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxLookupComponent.prototype, \"popupWidth\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxLookupComponent.prototype, \"position\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxLookupComponent.prototype, \"pulledDownText\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxLookupComponent.prototype, \"pullingDownText\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxLookupComponent.prototype, \"pullRefreshEnabled\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxLookupComponent.prototype, \"refreshingText\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxLookupComponent.prototype, \"rtlEnabled\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxLookupComponent.prototype, \"searchEnabled\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxLookupComponent.prototype, \"searchExpr\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxLookupComponent.prototype, \"searchMode\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxLookupComponent.prototype, \"searchPlaceholder\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Number),\r\n        __metadata(\"design:paramtypes\", [Number])\r\n    ], DxLookupComponent.prototype, \"searchTimeout\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxLookupComponent.prototype, \"selectedItem\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxLookupComponent.prototype, \"shading\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxLookupComponent.prototype, \"showCancelButton\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxLookupComponent.prototype, \"showClearButton\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxLookupComponent.prototype, \"showDataBeforeSearch\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxLookupComponent.prototype, \"showPopupTitle\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxLookupComponent.prototype, \"stylingMode\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Number),\r\n        __metadata(\"design:paramtypes\", [Number])\r\n    ], DxLookupComponent.prototype, \"tabIndex\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxLookupComponent.prototype, \"text\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxLookupComponent.prototype, \"title\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxLookupComponent.prototype, \"titleTemplate\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxLookupComponent.prototype, \"useNativeScrolling\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxLookupComponent.prototype, \"usePopover\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxLookupComponent.prototype, \"validationError\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Array),\r\n        __metadata(\"design:paramtypes\", [Array])\r\n    ], DxLookupComponent.prototype, \"validationErrors\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxLookupComponent.prototype, \"validationMessageMode\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxLookupComponent.prototype, \"validationStatus\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxLookupComponent.prototype, \"value\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", String),\r\n        __metadata(\"design:paramtypes\", [String])\r\n    ], DxLookupComponent.prototype, \"valueChangeEvent\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxLookupComponent.prototype, \"valueExpr\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxLookupComponent.prototype, \"visible\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Object),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxLookupComponent.prototype, \"width\", null);\r\n    __decorate([\r\n        Input(),\r\n        __metadata(\"design:type\", Boolean),\r\n        __metadata(\"design:paramtypes\", [Boolean])\r\n    ], DxLookupComponent.prototype, \"wrapItemText\", null);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"onClosed\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"onContentReady\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"onDisposing\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"onInitialized\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"onItemClick\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"onOpened\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"onOptionChanged\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"onPageLoading\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"onPullRefresh\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"onScroll\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"onSelectionChanged\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"onTitleRendered\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"onValueChanged\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"accessKeyChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"activeStateEnabledChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"animationChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"applyButtonTextChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"applyValueModeChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"cancelButtonTextChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"cleanSearchOnOpeningChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"clearButtonTextChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"closeOnOutsideClickChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"dataSourceChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"deferRenderingChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"disabledChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"displayExprChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"displayValueChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"elementAttrChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"fieldTemplateChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"focusStateEnabledChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"fullScreenChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"groupedChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"groupTemplateChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"heightChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"hintChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"hoverStateEnabledChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"inputAttrChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"isValidChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"itemsChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"itemTemplateChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"minSearchLengthChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"nameChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"nextButtonTextChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"noDataTextChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"openedChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"pageLoadingTextChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"pageLoadModeChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"placeholderChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"popupHeightChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"popupWidthChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"positionChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"pulledDownTextChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"pullingDownTextChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"pullRefreshEnabledChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"refreshingTextChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"rtlEnabledChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"searchEnabledChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"searchExprChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"searchModeChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"searchPlaceholderChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"searchTimeoutChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"selectedItemChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"shadingChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"showCancelButtonChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"showClearButtonChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"showDataBeforeSearchChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"showPopupTitleChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"stylingModeChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"tabIndexChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"textChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"titleChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"titleTemplateChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"useNativeScrollingChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"usePopoverChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"validationErrorChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"validationErrorsChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"validationMessageModeChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"validationStatusChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"valueChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"valueChangeEventChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"valueExprChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"visibleChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"widthChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"wrapItemTextChange\", void 0);\r\n    __decorate([\r\n        Output(),\r\n        __metadata(\"design:type\", EventEmitter)\r\n    ], DxLookupComponent.prototype, \"onBlur\", void 0);\r\n    __decorate([\r\n        HostListener('valueChange', ['$event']),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Object]),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], DxLookupComponent.prototype, \"change\", null);\r\n    __decorate([\r\n        HostListener('onBlur', ['$event']),\r\n        __metadata(\"design:type\", Object)\r\n    ], DxLookupComponent.prototype, \"touched\", void 0);\r\n    __decorate([\r\n        ContentChildren(DxiItemComponent),\r\n        __metadata(\"design:type\", QueryList),\r\n        __metadata(\"design:paramtypes\", [Object])\r\n    ], DxLookupComponent.prototype, \"itemsChildren\", null);\r\n    DxLookupComponent = __decorate([\r\n        Component({\r\n            selector: 'dx-lookup',\r\n            template: '',\r\n            providers: [\r\n                DxTemplateHost,\r\n                WatcherHelper,\r\n                CUSTOM_VALUE_ACCESSOR_PROVIDER,\r\n                NestedOptionHost,\r\n                IterableDifferHelper\r\n            ]\r\n        }),\r\n        __param(7, Inject(PLATFORM_ID)),\r\n        __metadata(\"design:paramtypes\", [ElementRef, NgZone, DxTemplateHost,\r\n            WatcherHelper,\r\n            IterableDifferHelper,\r\n            NestedOptionHost,\r\n            TransferState, Object])\r\n    ], DxLookupComponent);\r\n    return DxLookupComponent;\r\n}(DxComponent));\r\nvar DxLookupModule = /** @class */ (function () {\r\n    function DxLookupModule() {\r\n    }\r\n    DxLookupModule = __decorate([\r\n        NgModule({\r\n            imports: [\r\n                DxoAnimationModule,\r\n                DxoHideModule,\r\n                DxoShowModule,\r\n                DxiItemModule,\r\n                DxoPositionModule,\r\n                DxoAtModule,\r\n                DxoBoundaryOffsetModule,\r\n                DxoCollisionModule,\r\n                DxoMyModule,\r\n                DxoOffsetModule,\r\n                DxIntegrationModule,\r\n                DxTemplateModule,\r\n                BrowserTransferStateModule\r\n            ],\r\n            declarations: [\r\n                DxLookupComponent\r\n            ],\r\n            exports: [\r\n                DxLookupComponent,\r\n                DxoAnimationModule,\r\n                DxoHideModule,\r\n                DxoShowModule,\r\n                DxiItemModule,\r\n                DxoPositionModule,\r\n                DxoAtModule,\r\n                DxoBoundaryOffsetModule,\r\n                DxoCollisionModule,\r\n                DxoMyModule,\r\n                DxoOffsetModule,\r\n                DxTemplateModule\r\n            ]\r\n        })\r\n    ], DxLookupModule);\r\n    return DxLookupModule;\r\n}());\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DxLookupComponent, DxLookupModule };\n"]}