{"version":3,"file":"devextreme-angular-ui-diagram.js","sources":["ng://devextreme-angular/ui/diagram/index.ts","ng://devextreme-angular/ui/diagram/devextreme-angular-ui-diagram.ts"],"sourcesContent":["/*!\n * devextreme-angular\n * Version: 19.2.6\n * Build date: Thu Jan 30 2020\n *\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { TransferState } from '@angular/platform-browser';\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    PLATFORM_ID,\r\n    Inject,\r\n\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter,\r\n    OnChanges,\r\n    DoCheck,\r\n    SimpleChanges,\r\n    ContentChildren,\r\n    QueryList\r\n} from '@angular/core';\r\n\r\n\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\n\r\nimport DxDiagram from 'devextreme/ui/diagram';\r\n\r\n\r\nimport {\r\n    DxComponent,\r\n    DxTemplateHost,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    NestedOptionHost,\r\n    IterableDifferHelper,\r\n    WatcherHelper\r\n} from 'devextreme-angular/core';\r\n\r\nimport { DxoContextMenuModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiCustomShapeModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiConnectionPointModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoEdgesModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoExportModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoGridSizeModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoNodesModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoAutoLayoutModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoPageSizeModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiItemModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoPropertiesPanelModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiGroupModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoToolbarModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoToolboxModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoZoomLevelModule } from 'devextreme-angular/ui/nested';\r\n\r\nimport { DxiCustomShapeComponent } from 'devextreme-angular/ui/nested';\r\n\r\n\r\n\r\n\r\n/**\r\n * [tags] ctp The Diagram widget provides a visual interface to help you design new and modify existing diagrams. #include common-ctp-note with { component: \"Diagram\" }\r\n */\r\n@Component({\r\n    selector: 'dx-diagram',\r\n    template: '',\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        NestedOptionHost,\r\n        IterableDifferHelper\r\n    ]\r\n})\r\nexport class DxDiagramComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    instance: DxDiagram;\r\n\r\n    /**\r\n     * Specifies the shortcut key that sets focus on the widget.\r\n     */\r\n    @Input()\r\n    get accessKey(): string {\r\n        return this._getOption('accessKey');\r\n    }\r\n    set accessKey(value: string) {\r\n        this._setOption('accessKey', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not the widget changes its state when interacting with a user.\r\n     */\r\n    @Input()\r\n    get activeStateEnabled(): boolean {\r\n        return this._getOption('activeStateEnabled');\r\n    }\r\n    set activeStateEnabled(value: boolean) {\r\n        this._setOption('activeStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the Diagram widget automatically zooms the work area.\r\n     */\r\n    @Input()\r\n    get autoZoom(): string {\r\n        return this._getOption('autoZoom');\r\n    }\r\n    set autoZoom(value: string) {\r\n        this._setOption('autoZoom', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the context menu's settings.\r\n     */\r\n    @Input()\r\n    get contextMenu(): { commands?: Array<string>, enabled?: boolean } {\r\n        return this._getOption('contextMenu');\r\n    }\r\n    set contextMenu(value: { commands?: Array<string>, enabled?: boolean }) {\r\n        this._setOption('contextMenu', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Provide access to an array of custom shapes.\r\n     */\r\n    @Input()\r\n    get customShapes(): Array<any | { allowEditImage?: boolean, allowEditText?: boolean, backgroundImageHeight?: number, backgroundImageLeft?: number, backgroundImageTop?: number, backgroundImageUrl?: string, backgroundImageWidth?: number, baseType?: string, category?: string, connectionPoints?: Array<any | { x?: number, y?: number }>, defaultHeight?: number, defaultImageUrl?: string, defaultText?: string, defaultWidth?: number, imageHeight?: number, imageLeft?: number, imageTop?: number, imageWidth?: number, textHeight?: number, textLeft?: number, textTop?: number, textWidth?: number, title?: string, type?: string }> {\r\n        return this._getOption('customShapes');\r\n    }\r\n    set customShapes(value: Array<any | { allowEditImage?: boolean, allowEditText?: boolean, backgroundImageHeight?: number, backgroundImageLeft?: number, backgroundImageTop?: number, backgroundImageUrl?: string, backgroundImageWidth?: number, baseType?: string, category?: string, connectionPoints?: Array<any | { x?: number, y?: number }>, defaultHeight?: number, defaultImageUrl?: string, defaultText?: string, defaultWidth?: number, imageHeight?: number, imageLeft?: number, imageTop?: number, imageWidth?: number, textHeight?: number, textLeft?: number, textTop?: number, textWidth?: number, title?: string, type?: string }>) {\r\n        this._setOption('customShapes', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget responds to user interaction.\r\n     */\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value: boolean) {\r\n        this._setOption('disabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Allows you to bind the collection of diagram edges to a data source.\r\n     */\r\n    @Input()\r\n    get edges(): { dataSource?: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | Array<any>, fromExpr?: Function | string, fromLineEndExpr?: Function | string, fromPointIndexExpr?: Function | string, keyExpr?: Function | string, lineTypeExpr?: Function | string, lockedExpr?: Function | string, pointsExpr?: Function | string, styleExpr?: Function | string, textExpr?: Function | string, textStyleExpr?: Function | string, toExpr?: Function | string, toLineEndExpr?: Function | string, toPointIndexExpr?: Function | string, zIndexExpr?: Function | string } {\r\n        return this._getOption('edges');\r\n    }\r\n    set edges(value: { dataSource?: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | Array<any>, fromExpr?: Function | string, fromLineEndExpr?: Function | string, fromPointIndexExpr?: Function | string, keyExpr?: Function | string, lineTypeExpr?: Function | string, lockedExpr?: Function | string, pointsExpr?: Function | string, styleExpr?: Function | string, textExpr?: Function | string, textStyleExpr?: Function | string, toExpr?: Function | string, toLineEndExpr?: Function | string, toPointIndexExpr?: Function | string, zIndexExpr?: Function | string }) {\r\n        this._setOption('edges', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    @Input()\r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures export settings.\r\n     */\r\n    @Input()\r\n    get export(): { fileName?: string, proxyUrl?: string } {\r\n        return this._getOption('export');\r\n    }\r\n    set export(value: { fileName?: string, proxyUrl?: string }) {\r\n        this._setOption('export', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget can be focused using keyboard navigation.\r\n     */\r\n    @Input()\r\n    get focusStateEnabled(): boolean {\r\n        return this._getOption('focusStateEnabled');\r\n    }\r\n    set focusStateEnabled(value: boolean) {\r\n        this._setOption('focusStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not to display the widget in full-screen mode.\r\n     */\r\n    @Input()\r\n    get fullScreen(): boolean {\r\n        return this._getOption('fullScreen');\r\n    }\r\n    set fullScreen(value: boolean) {\r\n        this._setOption('fullScreen', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the grid pitch.\r\n     */\r\n    @Input()\r\n    get gridSize(): number | { items?: Array<number>, value?: number } {\r\n        return this._getOption('gridSize');\r\n    }\r\n    set gridSize(value: number | { items?: Array<number>, value?: number }) {\r\n        this._setOption('gridSize', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's height.\r\n     */\r\n    @Input()\r\n    get height(): number | Function | string {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value: number | Function | string) {\r\n        this._setOption('height', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies text for a hint that appears when a user pauses on the widget.\r\n     */\r\n    @Input()\r\n    get hint(): string {\r\n        return this._getOption('hint');\r\n    }\r\n    set hint(value: string) {\r\n        this._setOption('hint', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget changes its state when a user pauses on it.\r\n     */\r\n    @Input()\r\n    get hoverStateEnabled(): boolean {\r\n        return this._getOption('hoverStateEnabled');\r\n    }\r\n    set hoverStateEnabled(value: boolean) {\r\n        this._setOption('hoverStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Allows you to bind the collection of diagram nodes to a data source.\r\n     */\r\n    @Input()\r\n    get nodes(): { autoLayout?: string | { orientation?: string, type?: string }, childrenExpr?: Function | string, containerKeyExpr?: Function | string, dataSource?: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | Array<any>, heightExpr?: Function | string, imageUrlExpr?: Function | string, itemsExpr?: Function | string, keyExpr?: Function | string, leftExpr?: Function | string, lockedExpr?: Function | string, parentKeyExpr?: Function | string, styleExpr?: Function | string, textExpr?: Function | string, textStyleExpr?: Function | string, topExpr?: Function | string, typeExpr?: Function | string, widthExpr?: Function | string, zIndexExpr?: Function | string } {\r\n        return this._getOption('nodes');\r\n    }\r\n    set nodes(value: { autoLayout?: string | { orientation?: string, type?: string }, childrenExpr?: Function | string, containerKeyExpr?: Function | string, dataSource?: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | Array<any>, heightExpr?: Function | string, imageUrlExpr?: Function | string, itemsExpr?: Function | string, keyExpr?: Function | string, leftExpr?: Function | string, lockedExpr?: Function | string, parentKeyExpr?: Function | string, styleExpr?: Function | string, textExpr?: Function | string, textStyleExpr?: Function | string, topExpr?: Function | string, typeExpr?: Function | string, widthExpr?: Function | string, zIndexExpr?: Function | string }) {\r\n        this._setOption('nodes', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the color of a diagram page.\r\n     */\r\n    @Input()\r\n    get pageColor(): string {\r\n        return this._getOption('pageColor');\r\n    }\r\n    set pageColor(value: string) {\r\n        this._setOption('pageColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the page orientation.\r\n     */\r\n    @Input()\r\n    get pageOrientation(): string {\r\n        return this._getOption('pageOrientation');\r\n    }\r\n    set pageOrientation(value: string) {\r\n        this._setOption('pageOrientation', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a size of pages.\r\n     */\r\n    @Input()\r\n    get pageSize(): { height?: number, items?: Array<any | { height?: number, text?: string, width?: number }>, width?: number } {\r\n        return this._getOption('pageSize');\r\n    }\r\n    set pageSize(value: { height?: number, items?: Array<any | { height?: number, text?: string, width?: number }>, width?: number }) {\r\n        this._setOption('pageSize', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Provides access to Properties panel settings.\r\n     */\r\n    @Input()\r\n    get propertiesPanel(): { collapsible?: boolean, enabled?: boolean, groups?: Array<any | { commands?: Array<string> }> } {\r\n        return this._getOption('propertiesPanel');\r\n    }\r\n    set propertiesPanel(value: { collapsible?: boolean, enabled?: boolean, groups?: Array<any | { commands?: Array<string> }> }) {\r\n        this._setOption('propertiesPanel', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the diagram is read-only.\r\n     */\r\n    @Input()\r\n    get readOnly(): boolean {\r\n        return this._getOption('readOnly');\r\n    }\r\n    set readOnly(value: boolean) {\r\n        this._setOption('readOnly', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    @Input()\r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether grid lines are visible.\r\n     */\r\n    @Input()\r\n    get showGrid(): boolean {\r\n        return this._getOption('showGrid');\r\n    }\r\n    set showGrid(value: boolean) {\r\n        this._setOption('showGrid', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switch the Diagram widget to simple view mode.\r\n     */\r\n    @Input()\r\n    get simpleView(): boolean {\r\n        return this._getOption('simpleView');\r\n    }\r\n    set simpleView(value: boolean) {\r\n        this._setOption('simpleView', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether diagram elements should snap to grid lines.\r\n     */\r\n    @Input()\r\n    get snapToGrid(): boolean {\r\n        return this._getOption('snapToGrid');\r\n    }\r\n    set snapToGrid(value: boolean) {\r\n        this._setOption('snapToGrid', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the number of the element when the Tab key is used for navigating.\r\n     */\r\n    @Input()\r\n    get tabIndex(): number {\r\n        return this._getOption('tabIndex');\r\n    }\r\n    set tabIndex(value: number) {\r\n        this._setOption('tabIndex', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Provides access to toolbar settings.\r\n     */\r\n    @Input()\r\n    get toolbar(): { commands?: Array<string>, visible?: boolean } {\r\n        return this._getOption('toolbar');\r\n    }\r\n    set toolbar(value: { commands?: Array<string>, visible?: boolean }) {\r\n        this._setOption('toolbar', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Provides access to toolbox settings.\r\n     */\r\n    @Input()\r\n    get toolbox(): { groups?: Array<any | string | { category?: string, displayMode?: string, expanded?: boolean, shapes?: Array<string>, title?: string }>, visible?: boolean } {\r\n        return this._getOption('toolbox');\r\n    }\r\n    set toolbox(value: { groups?: Array<any | string | { category?: string, displayMode?: string, expanded?: boolean, shapes?: Array<string>, title?: string }>, visible?: boolean }) {\r\n        this._setOption('toolbox', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the unit for measurement options (for example, defaultHeight, gridSize, leftExpr).\r\n     */\r\n    @Input()\r\n    get units(): string {\r\n        return this._getOption('units');\r\n    }\r\n    set units(value: string) {\r\n        this._setOption('units', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the measurement unit that is displayed in user interface elements.\r\n     */\r\n    @Input()\r\n    get viewUnits(): string {\r\n        return this._getOption('viewUnits');\r\n    }\r\n    set viewUnits(value: string) {\r\n        this._setOption('viewUnits', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget is visible.\r\n     */\r\n    @Input()\r\n    get visible(): boolean {\r\n        return this._getOption('visible');\r\n    }\r\n    set visible(value: boolean) {\r\n        this._setOption('visible', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's width.\r\n     */\r\n    @Input()\r\n    get width(): number | Function | string {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value: number | Function | string) {\r\n        this._setOption('width', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the zoom level.\r\n     */\r\n    @Input()\r\n    get zoomLevel(): number | { items?: Array<number>, value?: number } {\r\n        return this._getOption('zoomLevel');\r\n    }\r\n    set zoomLevel(value: number | { items?: Array<number>, value?: number }) {\r\n        this._setOption('zoomLevel', value);\r\n    }\r\n\r\n    /**\r\n     * A function that is executed when the widget's content is ready and each time the content is changed.\r\n     */\r\n    @Output() onContentReady: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when the diagram's data changes.\r\n     */\r\n    @Output() onDataChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before the widget is disposed of.\r\n     */\r\n    @Output() onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function used in JavaScript frameworks to save the widget instance.\r\n     */\r\n    @Output() onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a shape or connector is clicked.\r\n     */\r\n    @Output() onItemClick: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a shape or connector is double-clicked.\r\n     */\r\n    @Output() onItemDblClick: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a widget option is changed.\r\n     */\r\n    @Output() onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after the selection is changed in the Diagram.\r\n     */\r\n    @Output() onSelectionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() accessKeyChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() activeStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() autoZoomChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() contextMenuChange: EventEmitter<{ commands?: Array<string>, enabled?: boolean }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() customShapesChange: EventEmitter<Array<any | { allowEditImage?: boolean, allowEditText?: boolean, backgroundImageHeight?: number, backgroundImageLeft?: number, backgroundImageTop?: number, backgroundImageUrl?: string, backgroundImageWidth?: number, baseType?: string, category?: string, connectionPoints?: Array<any | { x?: number, y?: number }>, defaultHeight?: number, defaultImageUrl?: string, defaultText?: string, defaultWidth?: number, imageHeight?: number, imageLeft?: number, imageTop?: number, imageWidth?: number, textHeight?: number, textLeft?: number, textTop?: number, textWidth?: number, title?: string, type?: string }>>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() disabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() edgesChange: EventEmitter<{ dataSource?: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | Array<any>, fromExpr?: Function | string, fromLineEndExpr?: Function | string, fromPointIndexExpr?: Function | string, keyExpr?: Function | string, lineTypeExpr?: Function | string, lockedExpr?: Function | string, pointsExpr?: Function | string, styleExpr?: Function | string, textExpr?: Function | string, textStyleExpr?: Function | string, toExpr?: Function | string, toLineEndExpr?: Function | string, toPointIndexExpr?: Function | string, zIndexExpr?: Function | string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() exportChange: EventEmitter<{ fileName?: string, proxyUrl?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() focusStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() fullScreenChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() gridSizeChange: EventEmitter<number | { items?: Array<number>, value?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() heightChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() hintChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() hoverStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() nodesChange: EventEmitter<{ autoLayout?: string | { orientation?: string, type?: string }, childrenExpr?: Function | string, containerKeyExpr?: Function | string, dataSource?: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | Array<any>, heightExpr?: Function | string, imageUrlExpr?: Function | string, itemsExpr?: Function | string, keyExpr?: Function | string, leftExpr?: Function | string, lockedExpr?: Function | string, parentKeyExpr?: Function | string, styleExpr?: Function | string, textExpr?: Function | string, textStyleExpr?: Function | string, topExpr?: Function | string, typeExpr?: Function | string, widthExpr?: Function | string, zIndexExpr?: Function | string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() pageColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() pageOrientationChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() pageSizeChange: EventEmitter<{ height?: number, items?: Array<any | { height?: number, text?: string, width?: number }>, width?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() propertiesPanelChange: EventEmitter<{ collapsible?: boolean, enabled?: boolean, groups?: Array<any | { commands?: Array<string> }> }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() readOnlyChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showGridChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() simpleViewChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() snapToGridChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() tabIndexChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() toolbarChange: EventEmitter<{ commands?: Array<string>, visible?: boolean }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() toolboxChange: EventEmitter<{ groups?: Array<any | string | { category?: string, displayMode?: string, expanded?: boolean, shapes?: Array<string>, title?: string }>, visible?: boolean }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() unitsChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() viewUnitsChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() visibleChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() widthChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() zoomLevelChange: EventEmitter<number | { items?: Array<number>, value?: number }>;\r\n\r\n\r\n\r\n\r\n    @ContentChildren(DxiCustomShapeComponent)\r\n    get customShapesChildren(): QueryList<DxiCustomShapeComponent> {\r\n        return this._getOption('customShapes');\r\n    }\r\n    set customShapesChildren(value) {\r\n        this.setChildren('customShapes', value);\r\n    }\r\n\r\n\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            private _watcherHelper: WatcherHelper,\r\n            private _idh: IterableDifferHelper,\r\n            optionHost: NestedOptionHost,\r\n            transferState: TransferState,\r\n            @Inject(PLATFORM_ID) platformId: any) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'dataChanged', emit: 'onDataChanged' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'itemClick', emit: 'onItemClick' },\r\n            { subscribe: 'itemDblClick', emit: 'onItemDblClick' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'selectionChanged', emit: 'onSelectionChanged' },\r\n            { emit: 'accessKeyChange' },\r\n            { emit: 'activeStateEnabledChange' },\r\n            { emit: 'autoZoomChange' },\r\n            { emit: 'contextMenuChange' },\r\n            { emit: 'customShapesChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'edgesChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'exportChange' },\r\n            { emit: 'focusStateEnabledChange' },\r\n            { emit: 'fullScreenChange' },\r\n            { emit: 'gridSizeChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'nodesChange' },\r\n            { emit: 'pageColorChange' },\r\n            { emit: 'pageOrientationChange' },\r\n            { emit: 'pageSizeChange' },\r\n            { emit: 'propertiesPanelChange' },\r\n            { emit: 'readOnlyChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'showGridChange' },\r\n            { emit: 'simpleViewChange' },\r\n            { emit: 'snapToGridChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'toolbarChange' },\r\n            { emit: 'toolboxChange' },\r\n            { emit: 'unitsChange' },\r\n            { emit: 'viewUnitsChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' },\r\n            { emit: 'zoomLevelChange' }\r\n        ]);\r\n\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n\r\n        return new DxDiagram(element, options);\r\n    }\r\n\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('customShapes', changes);\r\n    }\r\n\r\n    setupChanges(prop: string, changes: SimpleChanges) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        this._idh.doCheck('customShapes');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n\r\n    _setOption(name: string, value: any) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    DxoContextMenuModule,\r\n    DxiCustomShapeModule,\r\n    DxiConnectionPointModule,\r\n    DxoEdgesModule,\r\n    DxoExportModule,\r\n    DxoGridSizeModule,\r\n    DxoNodesModule,\r\n    DxoAutoLayoutModule,\r\n    DxoPageSizeModule,\r\n    DxiItemModule,\r\n    DxoPropertiesPanelModule,\r\n    DxiGroupModule,\r\n    DxoToolbarModule,\r\n    DxoToolboxModule,\r\n    DxoZoomLevelModule,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    BrowserTransferStateModule\r\n  ],\r\n  declarations: [\r\n    DxDiagramComponent\r\n  ],\r\n  exports: [\r\n    DxDiagramComponent,\r\n    DxoContextMenuModule,\r\n    DxiCustomShapeModule,\r\n    DxiConnectionPointModule,\r\n    DxoEdgesModule,\r\n    DxoExportModule,\r\n    DxoGridSizeModule,\r\n    DxoNodesModule,\r\n    DxoAutoLayoutModule,\r\n    DxoPageSizeModule,\r\n    DxiItemModule,\r\n    DxoPropertiesPanelModule,\r\n    DxiGroupModule,\r\n    DxoToolbarModule,\r\n    DxoToolboxModule,\r\n    DxoZoomLevelModule,\r\n    DxTemplateModule\r\n  ]\r\n})\r\nexport class DxDiagramModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["tslib_1.__extends","tslib_1.__decorate","tslib_1.__param"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;AA2EA;;;;IAawCA,sCAAW;IAymB/C,4BAAY,UAAsB,EAAE,MAAc,EAAE,YAA4B,EAChE,cAA6B,EAC7B,IAA0B,EAClC,UAA4B,EAC5B,aAA4B,EACP,UAAe;QAL5C,YAOI,kBAAM,UAAU,EAAE,MAAM,EAAE,YAAY,EAAE,cAAc,EAAE,aAAa,EAAE,UAAU,CAAC,SAgDrF;QAtDe,oBAAc,GAAd,cAAc,CAAe;QAC7B,UAAI,GAAJ,IAAI,CAAsB;QAOtC,KAAI,CAAC,oBAAoB,CAAC;YACtB,EAAE,SAAS,EAAE,cAAc,EAAE,IAAI,EAAE,gBAAgB,EAAE;YACrD,EAAE,SAAS,EAAE,aAAa,EAAE,IAAI,EAAE,eAAe,EAAE;YACnD,EAAE,SAAS,EAAE,WAAW,EAAE,IAAI,EAAE,aAAa,EAAE;YAC/C,EAAE,SAAS,EAAE,aAAa,EAAE,IAAI,EAAE,eAAe,EAAE;YACnD,EAAE,SAAS,EAAE,WAAW,EAAE,IAAI,EAAE,aAAa,EAAE;YAC/C,EAAE,SAAS,EAAE,cAAc,EAAE,IAAI,EAAE,gBAAgB,EAAE;YACrD,EAAE,SAAS,EAAE,eAAe,EAAE,IAAI,EAAE,iBAAiB,EAAE;YACvD,EAAE,SAAS,EAAE,kBAAkB,EAAE,IAAI,EAAE,oBAAoB,EAAE;YAC7D,EAAE,IAAI,EAAE,iBAAiB,EAAE;YAC3B,EAAE,IAAI,EAAE,0BAA0B,EAAE;YACpC,EAAE,IAAI,EAAE,gBAAgB,EAAE;YAC1B,EAAE,IAAI,EAAE,mBAAmB,EAAE;YAC7B,EAAE,IAAI,EAAE,oBAAoB,EAAE;YAC9B,EAAE,IAAI,EAAE,gBAAgB,EAAE;YAC1B,EAAE,IAAI,EAAE,aAAa,EAAE;YACvB,EAAE,IAAI,EAAE,mBAAmB,EAAE;YAC7B,EAAE,IAAI,EAAE,cAAc,EAAE;YACxB,EAAE,IAAI,EAAE,yBAAyB,EAAE;YACnC,EAAE,IAAI,EAAE,kBAAkB,EAAE;YAC5B,EAAE,IAAI,EAAE,gBAAgB,EAAE;YAC1B,EAAE,IAAI,EAAE,cAAc,EAAE;YACxB,EAAE,IAAI,EAAE,YAAY,EAAE;YACtB,EAAE,IAAI,EAAE,yBAAyB,EAAE;YACnC,EAAE,IAAI,EAAE,aAAa,EAAE;YACvB,EAAE,IAAI,EAAE,iBAAiB,EAAE;YAC3B,EAAE,IAAI,EAAE,uBAAuB,EAAE;YACjC,EAAE,IAAI,EAAE,gBAAgB,EAAE;YAC1B,EAAE,IAAI,EAAE,uBAAuB,EAAE;YACjC,EAAE,IAAI,EAAE,gBAAgB,EAAE;YAC1B,EAAE,IAAI,EAAE,kBAAkB,EAAE;YAC5B,EAAE,IAAI,EAAE,gBAAgB,EAAE;YAC1B,EAAE,IAAI,EAAE,kBAAkB,EAAE;YAC5B,EAAE,IAAI,EAAE,kBAAkB,EAAE;YAC5B,EAAE,IAAI,EAAE,gBAAgB,EAAE;YAC1B,EAAE,IAAI,EAAE,eAAe,EAAE;YACzB,EAAE,IAAI,EAAE,eAAe,EAAE;YACzB,EAAE,IAAI,EAAE,aAAa,EAAE;YACvB,EAAE,IAAI,EAAE,iBAAiB,EAAE;YAC3B,EAAE,IAAI,EAAE,eAAe,EAAE;YACzB,EAAE,IAAI,EAAE,aAAa,EAAE;YACvB,EAAE,IAAI,EAAE,iBAAiB,EAAE;SAC9B,CAAC,CAAC;QAEH,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAI,CAAC,CAAC;QACxB,UAAU,CAAC,OAAO,CAAC,KAAI,CAAC,CAAC;;KAC5B;IAzpBD,sBAAI,yCAAS;;;;aAAb;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;SACvC;aACD,UAAc,KAAa;YACvB,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;SACvC;;;OAHA;IAUD,sBAAI,kDAAkB;;;;aAAtB;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;SAChD;aACD,UAAuB,KAAc;YACjC,IAAI,CAAC,UAAU,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAAC;SAChD;;;OAHA;IAUD,sBAAI,wCAAQ;;;;aAAZ;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;SACtC;aACD,UAAa,KAAa;YACtB,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;SACtC;;;OAHA;IAUD,sBAAI,2CAAW;;;;aAAf;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;SACzC;aACD,UAAgB,KAAsD;YAClE,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;SACzC;;;OAHA;IAUD,sBAAI,4CAAY;;;;aAAhB;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;SAC1C;aACD,UAAiB,KAAgmB;YAC7mB,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;SAC1C;;;OAHA;IAUD,sBAAI,wCAAQ;;;;aAAZ;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;SACtC;aACD,UAAa,KAAc;YACvB,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;SACtC;;;OAHA;IAUD,sBAAI,qCAAK;;;;aAAT;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;SACnC;aACD,UAAU,KAAkjB;YACxjB,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;SACnC;;;OAHA;IAUD,sBAAI,2CAAW;;;;aAAf;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;SACzC;aACD,UAAgB,KAAU;YACtB,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;SACzC;;;OAHA;IAUD,sBAAI,sCAAM;;;;aAAV;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;SACpC;aACD,UAAW,KAA+C;YACtD,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;SACpC;;;OAHA;IAUD,sBAAI,iDAAiB;;;;aAArB;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC;SAC/C;aACD,UAAsB,KAAc;YAChC,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;SAC/C;;;OAHA;IAUD,sBAAI,0CAAU;;;;aAAd;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;SACxC;aACD,UAAe,KAAc;YACzB,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;SACxC;;;OAHA;IAUD,sBAAI,wCAAQ;;;;aAAZ;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;SACtC;aACD,UAAa,KAAyD;YAClE,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;SACtC;;;OAHA;IAUD,sBAAI,sCAAM;;;;aAAV;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;SACpC;aACD,UAAW,KAAiC;YACxC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;SACpC;;;OAHA;IAUD,sBAAI,oCAAI;;;;aAAR;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SAClC;aACD,UAAS,KAAa;YAClB,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SAClC;;;OAHA;IAUD,sBAAI,iDAAiB;;;;aAArB;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC;SAC/C;aACD,UAAsB,KAAc;YAChC,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;SAC/C;;;OAHA;IAUD,sBAAI,qCAAK;;;;aAAT;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;SACnC;aACD,UAAU,KAAmqB;YACzqB,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;SACnC;;;OAHA;IAUD,sBAAI,yCAAS;;;;aAAb;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;SACvC;aACD,UAAc,KAAa;YACvB,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;SACvC;;;OAHA;IAUD,sBAAI,+CAAe;;;;aAAnB;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;SAC7C;aACD,UAAoB,KAAa;YAC7B,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;SAC7C;;;OAHA;IAUD,sBAAI,wCAAQ;;;;aAAZ;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;SACtC;aACD,UAAa,KAAmH;YAC5H,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;SACtC;;;OAHA;IAUD,sBAAI,+CAAe;;;;aAAnB;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;SAC7C;aACD,UAAoB,KAAuG;YACvH,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;SAC7C;;;OAHA;IAUD,sBAAI,wCAAQ;;;;aAAZ;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;SACtC;aACD,UAAa,KAAc;YACvB,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;SACtC;;;OAHA;IAUD,sBAAI,0CAAU;;;;aAAd;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;SACxC;aACD,UAAe,KAAc;YACzB,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;SACxC;;;OAHA;IAUD,sBAAI,wCAAQ;;;;aAAZ;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;SACtC;aACD,UAAa,KAAc;YACvB,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;SACtC;;;OAHA;IAUD,sBAAI,0CAAU;;;;aAAd;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;SACxC;aACD,UAAe,KAAc;YACzB,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;SACxC;;;OAHA;IAUD,sBAAI,0CAAU;;;;aAAd;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;SACxC;aACD,UAAe,KAAc;YACzB,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;SACxC;;;OAHA;IAUD,sBAAI,wCAAQ;;;;aAAZ;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;SACtC;aACD,UAAa,KAAa;YACtB,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;SACtC;;;OAHA;IAUD,sBAAI,uCAAO;;;;aAAX;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;SACrC;aACD,UAAY,KAAsD;YAC9D,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;SACrC;;;OAHA;IAUD,sBAAI,uCAAO;;;;aAAX;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;SACrC;aACD,UAAY,KAAoK;YAC5K,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;SACrC;;;OAHA;IAUD,sBAAI,qCAAK;;;;aAAT;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;SACnC;aACD,UAAU,KAAa;YACnB,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;SACnC;;;OAHA;IAUD,sBAAI,yCAAS;;;;aAAb;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;SACvC;aACD,UAAc,KAAa;YACvB,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;SACvC;;;OAHA;IAUD,sBAAI,uCAAO;;;;aAAX;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;SACrC;aACD,UAAY,KAAc;YACtB,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;SACrC;;;OAHA;IAUD,sBAAI,qCAAK;;;;aAAT;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;SACnC;aACD,UAAU,KAAiC;YACvC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;SACnC;;;OAHA;IAUD,sBAAI,yCAAS;;;;aAAb;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;SACvC;aACD,UAAc,KAAyD;YACnE,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;SACvC;;;OAHA;IAsND,sBAAI,oDAAoB;aAAxB;YACI,OAAO,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;SAC1C;aACD,UAAyB,KAAK;YAC1B,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;SAC3C;;;OAHA;IAiES,4CAAe,GAAzB,UAA0B,OAAO,EAAE,OAAO;QAEtC,OAAO,IAAI,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;KAC1C;IAGD,wCAAW,GAAX;QACI,IAAI,CAAC,cAAc,EAAE,CAAC;KACzB;IAED,wCAAW,GAAX,UAAY,OAAsB;QAC9B,iBAAM,WAAW,YAAC,OAAO,CAAC,CAAC;QAC3B,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;KAC9C;IAED,yCAAY,GAAZ,UAAa,IAAY,EAAE,OAAsB;QAC7C,IAAI,EAAE,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,EAAE;YAClC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;SAClC;KACJ;IAED,sCAAS,GAAT;QACI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QAClC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,iBAAM,SAAS,WAAE,CAAC;QAClB,iBAAM,mBAAmB,WAAE,CAAC;KAC/B;IAED,uCAAU,GAAV,UAAW,IAAY,EAAE,KAAU;QAC/B,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACjD,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,IAAI,CAAC;QAE3D,IAAI,OAAO,IAAI,SAAS,EAAE;YACtB,iBAAM,UAAU,YAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SACjC;KACJ;;gBA5FuB,UAAU;gBAAU,MAAM;gBAAgB,cAAc;gBAChD,aAAa;gBACvB,oBAAoB;gBACtB,gBAAgB;gBACb,aAAa;gDAC3B,MAAM,SAAC,WAAW;;IAvmB3BC;QADC,KAAK,EAAE;;;uDAGP;IAUDA;QADC,KAAK,EAAE;;;gEAGP;IAUDA;QADC,KAAK,EAAE;;;sDAGP;IAUDA;QADC,KAAK,EAAE;;;yDAGP;IAUDA;QADC,KAAK,EAAE;kCAIgB,KAAK;yCAAL,KAAK;0DAD5B;IAUDA;QADC,KAAK,EAAE;;;sDAGP;IAUDA;QADC,KAAK,EAAE;;;mDAGP;IAUDA;QADC,KAAK,EAAE;;;yDAGP;IAUDA;QADC,KAAK,EAAE;;;oDAGP;IAUDA;QADC,KAAK,EAAE;;;+DAGP;IAUDA;QADC,KAAK,EAAE;;;wDAGP;IAUDA;QADC,KAAK,EAAE;;;sDAGP;IAUDA;QADC,KAAK,EAAE;;;oDAGP;IAUDA;QADC,KAAK,EAAE;;;kDAGP;IAUDA;QADC,KAAK,EAAE;;;+DAGP;IAUDA;QADC,KAAK,EAAE;;;mDAGP;IAUDA;QADC,KAAK,EAAE;;;uDAGP;IAUDA;QADC,KAAK,EAAE;;;6DAGP;IAUDA;QADC,KAAK,EAAE;;;sDAGP;IAUDA;QADC,KAAK,EAAE;;;6DAGP;IAUDA;QADC,KAAK,EAAE;;;sDAGP;IAUDA;QADC,KAAK,EAAE;;;wDAGP;IAUDA;QADC,KAAK,EAAE;;;sDAGP;IAUDA;QADC,KAAK,EAAE;;;wDAGP;IAUDA;QADC,KAAK,EAAE;;;wDAGP;IAUDA;QADC,KAAK,EAAE;;;sDAGP;IAUDA;QADC,KAAK,EAAE;;;qDAGP;IAUDA;QADC,KAAK,EAAE;;;qDAGP;IAUDA;QADC,KAAK,EAAE;;;mDAGP;IAUDA;QADC,KAAK,EAAE;;;uDAGP;IAUDA;QADC,KAAK,EAAE;;;qDAGP;IAUDA;QADC,KAAK,EAAE;;;mDAGP;IAUDA;QADC,KAAK,EAAE;;;uDAGP;IAQSA;QAAT,MAAM,EAAE;kCAAiB,YAAY;8DAAM;IAKlCA;QAAT,MAAM,EAAE;kCAAgB,YAAY;6DAAM;IAKjCA;QAAT,MAAM,EAAE;kCAAc,YAAY;2DAAM;IAK/BA;QAAT,MAAM,EAAE;kCAAgB,YAAY;6DAAM;IAKjCA;QAAT,MAAM,EAAE;kCAAc,YAAY;2DAAM;IAK/BA;QAAT,MAAM,EAAE;kCAAiB,YAAY;8DAAM;IAKlCA;QAAT,MAAM,EAAE;kCAAkB,YAAY;+DAAM;IAKnCA;QAAT,MAAM,EAAE;kCAAqB,YAAY;kEAAM;IAKtCA;QAAT,MAAM,EAAE;kCAAkB,YAAY;+DAAS;IAKtCA;QAAT,MAAM,EAAE;kCAA2B,YAAY;wEAAU;IAKhDA;QAAT,MAAM,EAAE;kCAAiB,YAAY;8DAAS;IAKrCA;QAAT,MAAM,EAAE;kCAAoB,YAAY;iEAAkD;IAKjFA;QAAT,MAAM,EAAE;kCAAqB,YAAY;kEAA4lB;IAK5nBA;QAAT,MAAM,EAAE;kCAAiB,YAAY;8DAAU;IAKtCA;QAAT,MAAM,EAAE;kCAAc,YAAY;2DAA8iB;IAKvkBA;QAAT,MAAM,EAAE;kCAAoB,YAAY;iEAAM;IAKrCA;QAAT,MAAM,EAAE;kCAAe,YAAY;4DAA2C;IAKrEA;QAAT,MAAM,EAAE;kCAA0B,YAAY;uEAAU;IAK/CA;QAAT,MAAM,EAAE;kCAAmB,YAAY;gEAAU;IAKxCA;QAAT,MAAM,EAAE;kCAAiB,YAAY;8DAAqD;IAKjFA;QAAT,MAAM,EAAE;kCAAe,YAAY;4DAA6B;IAKvDA;QAAT,MAAM,EAAE;kCAAa,YAAY;0DAAS;IAKjCA;QAAT,MAAM,EAAE;kCAA0B,YAAY;uEAAU;IAK/CA;QAAT,MAAM,EAAE;kCAAc,YAAY;2DAA+pB;IAKxrBA;QAAT,MAAM,EAAE;kCAAkB,YAAY;+DAAS;IAKtCA;QAAT,MAAM,EAAE;kCAAwB,YAAY;qEAAS;IAK5CA;QAAT,MAAM,EAAE;kCAAiB,YAAY;8DAA+G;IAK3IA;QAAT,MAAM,EAAE;kCAAwB,YAAY;qEAAmG;IAKtIA;QAAT,MAAM,EAAE;kCAAiB,YAAY;8DAAU;IAKtCA;QAAT,MAAM,EAAE;kCAAmB,YAAY;gEAAU;IAKxCA;QAAT,MAAM,EAAE;kCAAiB,YAAY;8DAAU;IAKtCA;QAAT,MAAM,EAAE;kCAAmB,YAAY;gEAAU;IAKxCA;QAAT,MAAM,EAAE;kCAAmB,YAAY;gEAAU;IAKxCA;QAAT,MAAM,EAAE;kCAAiB,YAAY;8DAAS;IAKrCA;QAAT,MAAM,EAAE;kCAAgB,YAAY;6DAAkD;IAK7EA;QAAT,MAAM,EAAE;kCAAgB,YAAY;6DAAgK;IAK3LA;QAAT,MAAM,EAAE;kCAAc,YAAY;2DAAS;IAKlCA;QAAT,MAAM,EAAE;kCAAkB,YAAY;+DAAS;IAKtCA;QAAT,MAAM,EAAE;kCAAgB,YAAY;6DAAU;IAKrCA;QAAT,MAAM,EAAE;kCAAc,YAAY;2DAA6B;IAKtDA;QAAT,MAAM,EAAE;kCAAkB,YAAY;+DAAqD;IAM5FA;QADC,eAAe,CAAC,uBAAuB,CAAC;kCACb,SAAS;;kEAEpC;IAjmBQ,kBAAkB;QAV9B,SAAS,CAAC;YACP,QAAQ,EAAE,YAAY;YACtB,QAAQ,EAAE,EAAE;YACZ,SAAS,EAAE;gBACP,cAAc;gBACd,aAAa;gBACb,gBAAgB;gBAChB,oBAAoB;aACvB;SACJ,CAAC;QA+mBWC,WAAA,MAAM,CAAC,WAAW,CAAC,CAAA;yCALJ,UAAU,EAAU,MAAM,EAAgB,cAAc;YAChD,aAAa;YACvB,oBAAoB;YACtB,gBAAgB;YACb,aAAa;OA7mB3B,kBAAkB,CAssB9B;IAAD,yBAAC;CAAA,CAtsBuC,WAAW,GAssBlD;;IA8CD;KAAgC;IAAnB,eAAe;QA5C3B,QAAQ,CAAC;YACR,OAAO,EAAE;gBACP,oBAAoB;gBACpB,oBAAoB;gBACpB,wBAAwB;gBACxB,cAAc;gBACd,eAAe;gBACf,iBAAiB;gBACjB,cAAc;gBACd,mBAAmB;gBACnB,iBAAiB;gBACjB,aAAa;gBACb,wBAAwB;gBACxB,cAAc;gBACd,gBAAgB;gBAChB,gBAAgB;gBAChB,kBAAkB;gBAClB,mBAAmB;gBACnB,gBAAgB;gBAChB,0BAA0B;aAC3B;YACD,YAAY,EAAE;gBACZ,kBAAkB;aACnB;YACD,OAAO,EAAE;gBACP,kBAAkB;gBAClB,oBAAoB;gBACpB,oBAAoB;gBACpB,wBAAwB;gBACxB,cAAc;gBACd,eAAe;gBACf,iBAAiB;gBACjB,cAAc;gBACd,mBAAmB;gBACnB,iBAAiB;gBACjB,aAAa;gBACb,wBAAwB;gBACxB,cAAc;gBACd,gBAAgB;gBAChB,gBAAgB;gBAChB,kBAAkB;gBAClB,gBAAgB;aACjB;SACF,CAAC;OACW,eAAe,CAAI;IAAD,sBAAC;CAAhC;;AC50BA;;GAEG;;;;"}