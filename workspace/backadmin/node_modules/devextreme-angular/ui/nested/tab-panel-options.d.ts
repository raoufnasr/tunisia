/*!
 * devextreme-angular
 * Version: 19.2.6
 * Build date: Thu Jan 30 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnDestroy, EventEmitter, QueryList } from '@angular/core';
import { NestedOptionHost } from 'devextreme-angular/core';
import { DxoTabPanelOptions } from './base/tab-panel-options';
import { DxiItemComponent } from './item-dxi';
import * as ɵngcc0 from '@angular/core';
export declare class DxoTabPanelOptionsComponent extends DxoTabPanelOptions implements OnDestroy {
    /**
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
     */
    itemsChange: EventEmitter<Array<string | any | {
        badge?: string;
        disabled?: boolean;
        html?: string;
        icon?: string;
        tabTemplate?: any;
        template?: any;
        text?: string;
        title?: string;
    }>>;
    /**
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
     */
    selectedIndexChange: EventEmitter<number>;
    /**
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
     */
    selectedItemChange: EventEmitter<any>;
    protected readonly _optionPath: string;
    itemsChildren: QueryList<DxiItemComponent>;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DxoTabPanelOptionsComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DxoTabPanelOptionsComponent, "dxo-tab-panel-options", never, {
    "accessKey": "accessKey";
    "activeStateEnabled": "activeStateEnabled";
    "animationEnabled": "animationEnabled";
    "dataSource": "dataSource";
    "deferRendering": "deferRendering";
    "disabled": "disabled";
    "elementAttr": "elementAttr";
    "focusStateEnabled": "focusStateEnabled";
    "height": "height";
    "hint": "hint";
    "hoverStateEnabled": "hoverStateEnabled";
    "itemHoldTimeout": "itemHoldTimeout";
    "items": "items";
    "itemTemplate": "itemTemplate";
    "itemTitleTemplate": "itemTitleTemplate";
    "loop": "loop";
    "noDataText": "noDataText";
    "onContentReady": "onContentReady";
    "onDisposing": "onDisposing";
    "onInitialized": "onInitialized";
    "onItemClick": "onItemClick";
    "onItemContextMenu": "onItemContextMenu";
    "onItemHold": "onItemHold";
    "onItemRendered": "onItemRendered";
    "onOptionChanged": "onOptionChanged";
    "onSelectionChanged": "onSelectionChanged";
    "onTitleClick": "onTitleClick";
    "onTitleHold": "onTitleHold";
    "onTitleRendered": "onTitleRendered";
    "repaintChangesOnly": "repaintChangesOnly";
    "rtlEnabled": "rtlEnabled";
    "scrollByContent": "scrollByContent";
    "scrollingEnabled": "scrollingEnabled";
    "selectedIndex": "selectedIndex";
    "selectedItem": "selectedItem";
    "showNavButtons": "showNavButtons";
    "swipeEnabled": "swipeEnabled";
    "tabIndex": "tabIndex";
    "visible": "visible";
    "width": "width";
}, {
    "itemsChange": "itemsChange";
    "selectedIndexChange": "selectedIndexChange";
    "selectedItemChange": "selectedItemChange";
}, ["itemsChildren"]>;
}
export declare class DxoTabPanelOptionsModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<DxoTabPanelOptionsModule, [typeof DxoTabPanelOptionsComponent], never, [typeof DxoTabPanelOptionsComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<DxoTabPanelOptionsModule>;
}

//# sourceMappingURL=tab-panel-options.d.ts.map